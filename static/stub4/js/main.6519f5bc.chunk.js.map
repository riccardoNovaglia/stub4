{"version":3,"sources":["Header.js","Core/prototypes/stubsComponents/Panel.js","Core/prototypes/stubsComponents/ItemsList.js","Core/stubs/StubsList.js","Core/prototypes/stubsComponents/EnableDisableButton.js","Core/prototypes/matching/UrlMatcher.js","Core/prototypes/matching/HeadersMatcher.js","Core/prototypes/matching/BodyMatcher.js","Core/prototypes/matching/MethodMatcher.js","Core/prototypes/matching/RequestMatcher.js","Core/prototypes/stubsComponents/SaveButton.js","Core/stubs/StubEditor.js","Core/prototypes/stubsComponents/ItemModal.js","Core/stubs/Stub.js","Core/stubs/Stubs.js","Core/cruds/CrudsList.js","Core/cruds/CrudEditor.js","Core/cruds/Crud.js","Core/cruds/Cruds.js","Core/scenarios/ScenariosList.js","Core/scenarios/ScenarioEditor.js","Core/scenarios/Scenario.js","Core/scenarios/Scenarios.js","Core/proxy/ProxyEditor.js","Core/proxy/Proxy.js","Core/proxy/ProxyList.js","Core/proxy/Proxys.js","Core/interactions/InteractionItems.js","Core/interactions/InteractionsList.js","Core/interactions/Interactions.js","Core/navigation/Tabs.js","Core/Core.js","Docs/Index.js","Docs/Contents.js","Docs/DocsBits.js","Docs/contents/Motivation.js","Docs/contents/What.js","Docs/contents/How/RequestMatcher.js","Docs/contents/How/Stubs.js","Docs/contents/How/Cruds.js","Docs/contents/How/Scenarios.js","Docs/contents/How/Proxy.js","Docs/contents/How/Config.js","Docs/contents/How.js","Docs/contents/Next.js","Docs/Documentation.js","App.js","index.js"],"names":["Header","children","className","Panel","itemsLifecycle","presentation","history","useHistory","location","useLocation","useState","items","setItems","fetch","clear","label","icon","useEffect","pathname","includes","onClear","a","onClick","push","toLowerCase","list","ItemsList","setSelected","styles","itemKey","item","enabled","itemClass","listClass","_","isEmpty","map","key","StubsList","selected","requestMatcher","url","selectionMatch","current","StubListItem","method","undefined","response","contentType","EnableDisableButton","id","setEnabled","toggleFunction","nowEnabled","htmlFor","type","checked","onChange","UrlMatcher","urlMatcher","focus","event","text","target","value","autoFocus","HeadersMatcher","headersMatcher","headersMatcherDefined","setHeadersMatcherDefined","adding","setAdding","empty","ExistingHeaders","NewHeader","Object","keys","index","disabled","copy","newKey","setNewKey","newValue","setNewValue","length","BodyMatcher","bodyMatcher","bodyMatcherDefined","setBodyMatcherDefined","BodyMatcherDetails","body","JSON","stringify","toJsonIfObject","rows","cols","parse","e","MethodMatcher","methodMatcher","methodMatcherDefined","setMethodMatcherDefined","Methods","RequestMatcher","setRequestMatcher","headers","SaveButton","onSave","require","stubFor","stubs","defaults","statusCode","StubEditor","onClose","onSaved","editedItem","setResponse","onKeyDown","keyCode","onSubmit","preventDefault","ItemModal","props","Modal","title","itemName","EditStub","stub","setStub","useParams","getById","getStub","close","replace","NewStub","Stubs","client","set","fetchStubs","clearStubs","onSelect","path","pathBased","preview","create","CrudsList","CrudListItem","idAlias","cruds","patchOnPost","CrudEditor","setUrlMatcher","crud","setCrud","EditCrud","getCrud","NewCrud","Cruds","fetchCruds","clearCruds","ScenariosList","ScenarioListItem","variableNames","scenarios","outcomes","ScenarioEditor","EditScenario","scenario","setScenario","getScenario","NewScenario","Scenarios","fetchScenarios","clearScenarios","destinationUrl","ProxyEditor","proxy","setProxyDef","proxys","EditProxy","setProxy","allProxy","getProxy","NewProxy","ProxyList","ProxyListItem","Proxy","fetchProxy","clearProxy","Matched","count","destination","href","Unmatched","requestDetails","InteractionsList","interactions","group","setGroup","GroupedInteractions","AllInteractions","interaction","matched","groupedMatched","filter","reduce","previous","find","groupedUnmatched","isEqual","Interactions","socket","setSocket","previousInteractions","setPreviousInteractions","clearInteractions","getInteractions","data","websocketPort","WebSocket","fetchInteractions","RealTimeInteractions","setInteractions","onmessage","message","parsedItem","Tabs","to","Core","useClients","clients","pending","stubClient","scenariosClient","crudClient","proxyClient","port","setPort","setPending","ax","axios","get","setStubClientPort","fetchPort","Stub4","StubClient","CrudClient","ScenariosClient","ProxyClient","contractClient","ContractsClient","Index","DocsLink","startsWith","DocsSubLink","pathBits","split","pop","parent","join","linkClassName","Contents","SectionTitle","Code","indentation","CodeSnippet","InlineCode","Link","Motivation","What","bodyMatch","RequestMatcherMoreInfoLink","mgs","StubResponseDefinition","itemId","delay","personId","name","RequestMatching","ResponseDefinition","username","match","greeting","default","source","Config","How","Next","Documentation","component","App","ReactDOM","render","document","getElementById"],"mappings":"6gBAIO,SAASA,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SACvB,OAAO,yBAAKC,UAAU,UAAUD,G,yECA3B,SAASE,EAAT,GAA4D,IAA3CC,EAA0C,EAA1CA,eAAgBC,EAA0B,EAA1BA,aAAcJ,EAAY,EAAZA,SAC9CK,EAAUC,cACVC,EAAWC,cAF+C,EAItCC,mBAAS,IAJ6B,mBAIzDC,EAJyD,KAIlDC,EAJkD,KAMxDC,EAAiBT,EAAjBS,MAAOC,EAAUV,EAAVU,MACPC,EAA2BV,EAA3BU,MAAOC,EAAoBX,EAApBW,KAAMd,EAAcG,EAAdH,UAErBe,qBAAU,WACHT,EAASU,SAASC,SAAS,UAAaX,EAASU,SAASC,SAAS,SACtEN,EAAMD,KAEP,CAACC,EAAOD,EAAUJ,IAErB,IAIMY,EAAO,uCAAG,sBAAAC,EAAA,sEACRP,IADQ,uBAERD,EAAMD,GAFE,2CAAH,qDAKb,OACE,yBAAKV,UAAU,SACb,4BACGa,EACD,uBAAGb,UAAU,kBAAkBc,GAC/B,4BAAQd,UAAU,YAAYoB,QAdlB,WAChBhB,EAAQiB,KAAK,iBAAUR,EAAV,QAAsBS,iBAc7B,uBAAGtB,UAAU,kBAAb,WADF,UAGA,4BAAQA,UAAU,WAAWoB,QAASF,GACpC,uBAAGlB,UAAU,kBAAb,aADF,UAIF,yBAAKA,UAAWA,GAAYD,EAASwB,KAAKd,K,2BCnCjC,SAASe,EAAT,GAAuE,IAAlDf,EAAiD,EAAjDA,MAAOgB,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAAS5B,EAAY,EAAZA,SACjEC,EAAY,SAAC4B,GAAD,OAAYA,EAAKC,QAA2CH,EAAOI,UAAxD,UAAmBJ,EAAOI,UAA1B,cAE7B,OACE,yBAAK9B,UAAW0B,EAAOK,WACpBC,IAAEC,QAAQxB,IAAU,uBAAGT,UAAU,gBAAb,oBACpBS,EAAMyB,KAAI,SAACN,GAAD,OACT,yBAAKO,IAAKR,EAAQC,GAAO5B,UAAWA,EAAU4B,GAAOR,QAAS,kBAAMK,EAAYG,KAC7E7B,EAAS6B,KAAKA,QCVlB,SAASQ,EAAT,GAAsD,IAAjC3B,EAAgC,EAAhCA,MAAO4B,EAAyB,EAAzBA,SAAUZ,EAAe,EAAfA,YAC3C,OACE,kBAACD,EAAD,CACEf,MAAOA,EACP4B,SAAUA,EACVZ,YAAaA,EACbC,OAAQ,CAAEI,UAAW,OAAQC,UAAW,aACxCJ,QAAS,SAACC,GAAD,gBAAaA,EAAKU,eAAeC,IAAjC,UACTC,eAAgB,SAACH,EAAUI,GAAX,OACdJ,EAASC,eAAeC,MAAQE,EAAQH,eAAeC,MAGxD,CACCX,KAAM,SAACA,GAAD,OAAU,kBAACc,EAAD,CAAcd,KAAMA,OAM5C,SAASc,EAAT,GAAiC,IACNC,EADHf,EAAQ,EAARA,KAItB,OACE,2BACE,0BAAM5B,UAAS,kBALM2C,EAKsBf,EAAKU,eAAeK,OAJtD,MAAXA,QAA6BC,IAAXD,EAAuB,MAAQA,EAAOrB,iBAKnDM,EAAKU,eAAeK,QACf,IACR,0BAAM3C,UAAU,OAAO4B,EAAKU,eAAeC,KAC3C,wCACA,0BAAMvC,UAAU,eAAe4B,EAAKiB,SAASC,c,iBC9B5C,SAASC,EAAT,GAA2E,IAA5CC,EAA2C,EAA3CA,GAAInB,EAAuC,EAAvCA,QAASoB,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAC7D,QAAWN,IAAPI,EAAkB,OAAO,KADkD,4CAG/E,8BAAA7B,EAAA,sEAC+B+B,EAAe,CAAEF,OAAOnB,GADvD,gBACUsB,EADV,EACUA,WACRF,EAAWE,GAFb,4CAH+E,sBAQ/E,OACE,oCACE,2BAAOnD,UAAU,gBAAgBoD,QAAQ,iBAAzC,WAGA,2BAAOJ,GAAG,gBAAgBK,KAAK,WAAWC,QAASzB,EAAS0B,SAbe,8CCF1E,SAASC,EAAT,GAA4E,IAAtDC,EAAqD,EAArDA,WAAYF,EAAyC,EAAzCA,SAAyC,IAA/B1C,aAA+B,MAAvB,MAAuB,MAAhB6C,aAAgB,SAMhF,OACE,6BACE,2BAAO1D,UAAU,YAAYoD,QAAQ,OAClCvC,GAEH,2BACEmC,GAAG,MACHK,KAAK,OACLE,SAbN,SAAgCI,GAC9B,IAAMC,EAAiC,MAA1BD,EAAME,OAAOC,MAAM,GAAnB,WAAoCH,EAAME,OAAOC,OAAUH,EAAME,OAAOC,MACrFP,EAASK,IAYLE,MAAOL,EACPM,UAAWL,K,YChBZ,SAASM,EAAT,GAAuD,IAA7BC,EAA4B,EAA5BA,eAAgBV,EAAY,EAAZA,SAAY,EACD/C,wBACrCoC,IAAnBqB,GAAgCA,IAAmB,IAFM,mBACpDC,EADoD,KAC7BC,EAD6B,OAI/B3D,oBAAS,GAJsB,mBAIpD4D,EAJoD,KAI5CC,EAJ4C,KAY3D,OANAtD,qBAAU,YACHqD,GAAUE,EAAML,IACnBE,GAAyB,KAE1B,CAACC,EAAQH,EAAgBE,IAG1B,oCACE,2BAAOnE,UAAU,YAAYoD,QAAQ,kBAArC,mBAGA,2BACEJ,GAAG,iBACHK,KAAK,WACLC,QAASY,EACTX,SAAU,SAACI,GACTU,EAAUV,EAAME,OAAOP,SACvBa,EAAyBR,EAAME,OAAOP,YAIzCY,GACC,oCACE,kBAACK,EAAD,CACEN,eAAgBA,EAChBE,yBAA0BA,EAC1BZ,SAAUA,IAEZ,kBAACiB,EAAD,CACEP,eAAgBA,EAChBG,OAAQA,EACRC,UAAWA,EACXd,SAAUA,IAEZ,4BAAQP,GAAG,iBAAiB5B,QAAS,kBAAMiD,GAAU,KAArD,SASV,SAASE,EAAT,GAAkF,IAAvDN,EAAsD,EAAtDA,eAAgBE,EAAsC,EAAtCA,yBAA0BZ,EAAY,EAAZA,SAEnE,YADgCX,IAAnBqB,EAA+BQ,OAAOC,KAAKT,GAAkB,IAC9D/B,KAAI,SAACC,EAAKwC,GAAN,OACd,yBAAKxC,IAAG,UAAKA,EAAL,YAAYwC,IAClB,sCAEE,2BAAOtB,KAAK,OAAOS,MAAO3B,EAAKyC,UAAQ,KAEzC,uCAEE,2BAAOvB,KAAK,OAAOS,MAAOG,EAAe9B,GAAMyC,UAAQ,KAEzD,4BACE5B,GAAG,eACH5B,QAAS,WACP,IAAMyD,EAAOZ,SACNY,EAAK1C,GACRmC,EAAMO,IACRV,GAAyB,GAE3BZ,EAASsB,KARb,cAiBN,SAASL,EAAT,GAAqE,IAAhDP,EAA+C,EAA/CA,eAAgBV,EAA+B,EAA/BA,SAAUa,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAAa,EACtC7D,mBAAS,IAD6B,mBAC3DsE,EAD2D,KACnDC,EADmD,OAElCvE,mBAAS,IAFyB,mBAE3DwE,EAF2D,KAEjDC,EAFiD,KAIlE,OAAKb,EAGH,6BACE,sCAEE,2BAAOf,KAAK,OAAOE,SAAU,SAACI,GAAD,OAAWoB,EAAUpB,EAAME,OAAOC,QAAQA,MAAOgB,KAEhF,2BAAO1B,QAAQ,YAAf,SACA,2BACEJ,GAAG,WACHK,KAAK,OACLE,SAAU,SAACI,GAAD,OAAWsB,EAAYtB,EAAME,OAAOC,QAC9CA,MAAOkB,IAET,4BACEhC,GAAG,gBACH5B,QAAS,WACPmC,EAAS,2BAAKU,GAAN,kBAAuBa,EAASE,KACxCX,GAAU,GACVU,EAAU,IACVE,EAAY,MANhB,WAWA,4BAAQjC,GAAG,eAAe5B,QAAS,kBAAMiD,GAAU,KAAnD,WA1BgB,KAiCtB,SAASC,EAAM1C,GACb,YAAgBgB,IAAThB,GAAmD,IAA7B6C,OAAOC,KAAK9C,GAAMsD,OCpH1C,SAASC,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,YAAa7B,EAAY,EAAZA,SAAY,EACD/C,oBAAU8D,EAAMc,IADf,mBAC9CC,EAD8C,KAC1BC,EAD0B,KAOrD,OAJAvE,qBAAU,WACRuE,GAAuBhB,EAAMc,MAC5B,CAACA,EAAaE,IAGf,oCACE,2BAAOtF,UAAU,YAAYoD,QAAQ,eAArC,gBAGA,2BACEJ,GAAG,cACHK,KAAK,WACLC,QAAS+B,EACT9B,SAAU,SAACI,GACT2B,EAAsB3B,EAAME,OAAOP,SACnCC,EACEI,EAAME,OAAOP,QACT,CACED,KAAM,OACNS,MAAO,SAETlB,MAITyC,GAAsB,kBAACE,EAAD,CAAoBH,YAAaA,EAAa7B,SAAUA,KAKrF,SAASgC,EAAT,GAAwD,IAgD9BC,EAhDIJ,EAAyB,EAAzBA,YAAa7B,EAAY,EAAZA,SACzC,OACE,6BACE,6BACE,2BAAOvD,UAAU,YAAYoD,QAAQ,YAArC,QAGA,4BACEJ,GAAG,WACHc,MAAK,OAAEsB,QAAF,IAAEA,OAAF,EAAEA,EAAa/B,KACpBE,SAAU,SAACI,GACTJ,EAAS,2BACJ6B,GADG,IAEN/B,KAAMM,EAAME,OAAOC,WAIvB,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,SAIJ,6BACE,2BAAO9D,UAAU,YAAYoD,QAAQ,aAArC,SAGA,8BACEJ,GAAG,YACHc,OAoBgB0B,EApBO,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAatB,MAqBtB,kBAAT0B,EAAoBC,KAAKC,UAAUF,GAAQA,GApBjDjC,SAAU,SAACI,GAAD,OACRJ,EAAS,2BACJ6B,GADG,IAENtB,MAAO6B,EAAehC,EAAME,OAAOC,WAGvC8B,KAAK,IACLC,KAAK,KACL7F,UAAU,gBAOpB,SAASsE,EAAM1C,GACb,YAAgBgB,IAAThB,GAAmD,IAA7B6C,OAAOC,KAAK9C,GAAMsD,OAOjD,SAASS,EAAeH,GACtB,IACE,OAAOC,KAAKK,MAAMN,GAClB,MAAOO,GACP,OAAOP,GCzFJ,SAASQ,EAAT,GAAqD,IAA5BC,EAA2B,EAA3BA,cAAe1C,EAAY,EAAZA,SAAY,EACD/C,wBAA2BoC,IAAlBqD,GADR,mBAClDC,EADkD,KAC5BC,EAD4B,KAOzD,OAJApF,qBAAU,WACRoF,OAA0CvD,IAAlBqD,KACvB,CAACA,EAAeE,IAGjB,oCACE,2BAAOnG,UAAU,YAAYoD,QAAQ,iBAArC,kBAGA,2BACEJ,GAAG,gBACHK,KAAK,WACLC,QAAS4C,EACT3C,SAAU,SAACI,GAAD,OAAWJ,EAASI,EAAME,OAAOP,QAAU,WAAQV,MAE9DsD,GAKP,SAAiBD,EAAe1C,GAC9B,OACE,oCACE,2BAAOvD,UAAU,YAAYoD,QAAQ,UAArC,UAGA,4BAAQJ,GAAG,SAASc,MAAOmC,EAAe1C,SAAU,SAACI,GAAD,OAAWJ,EAASI,EAAME,OAAOC,SACnF,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,KAAd,aAhBuBsC,CAAQH,EAAe1C,I,MCX/C,SAAS8C,EAAT,GAAgE,IAAtC/D,EAAqC,EAArCA,eAAgBgE,EAAqB,EAArBA,kBAC/C,OACE,yBAAKtG,UAAU,mBACb,2BAAOoD,QAAQ,qBAAf,oBACA,8BAAUJ,GAAG,oBAAoBhD,UAAU,qBACzC,6BACE,kBAACwD,EAAD,CACEC,WAAYnB,EAAeC,IAC3BgB,SAAU,SAAChB,GAAD,OAAS+D,EAAkB,2BAAKhE,GAAN,IAAsBC,aAG9D,6BACE,kBAACyD,EAAD,CACEC,cAAe3D,EAAeK,OAC9BY,SAAU,SAACZ,GAAD,OAAY2D,EAAkB,2BAAKhE,GAAN,IAAsBK,gBAGjE,6BACE,kBAACqB,EAAD,CACEC,eAAgB3B,EAAeiE,QAC/BhD,SAAU,SAACgD,GAAD,OAAaD,EAAkB,2BAAKhE,GAAN,IAAsBiE,iBAGlE,6BACE,kBAACpB,EAAD,CACEC,YAAa9C,EAAekD,KAC5BjC,SAAU,SAACiC,GAAD,OAAUc,EAAkB,2BAAKhE,GAAN,IAAsBkD,gBCjChE,SAASgB,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC3B,OACE,yBAAKzG,UAAU,eACb,4BAAQA,UAAU,aAAaoB,QAASqF,GACtC,uBAAGzG,UAAU,kBAAb,gBADF,S,MCAqB0G,EAAQ,GAA3BC,E,EAAAA,QAASC,E,EAAAA,MAEXC,EACY,CAAEtE,IAAK,IADnBsE,EAEM,CACRC,WAAY,IACZtB,KAAM,KACNnC,KAAM,oBAIH,SAAS0D,EAAT,GAAuD,IAAD,EAwFnCvB,EAxFGwB,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACvClE,EAAE,OAAGkE,QAAH,IAAGA,OAAH,EAAGA,EAAYlE,GADoC,EAE7BxC,mBAAQ,iBAAC0G,QAAD,IAACA,OAAD,EAACA,EAAYrF,eAAb,UAFqB,mBAEpDA,EAFoD,KAE3CoB,EAF2C,OAGfzC,mBAAS,2BAChDqG,GAD+C,OAE/CK,QAF+C,IAE/CA,OAF+C,EAE/CA,EAAY5E,iBAL0C,mBAGpDA,EAHoD,KAGpCgE,EAHoC,OAO3B9F,mBAAS,2BACpCqG,GADmC,OAEnCK,QAFmC,IAEnCA,OAFmC,EAEnCA,EAAYrE,WAT0C,mBAOpDA,EAPoD,KAO1CsE,EAP0C,cAY5CV,IAZ4C,2EAY3D,sBAAAtF,EAAA,sEACQwF,EAAQ,CAAE3D,KAAIV,iBAAgBO,aADtC,OAEEoE,IAFF,4CAZ2D,sBAiB3D,OACE,0BACEG,UAAW,SAACrB,GAAD,OAAqB,KAAdA,EAAEsB,SAAkBL,KACtChH,UAAY6B,EAA6B,GAAnB,iBACtByF,SAAU,SAAC3D,GACTA,EAAM4D,iBACNd,MAGF,kBAAC,EAAD,CACEzD,GAAE,OAAEkE,QAAF,IAAEA,OAAF,EAAEA,EAAYlE,GAChBnB,QAASA,EACToB,WAAYA,EACZC,eAAgB0D,EAAM3D,aAGxB,8BAAUjD,UAAU,iBAAiB4E,UAAW/C,GAC9C,kBAAC,EAAD,CAAgBS,eAAgBA,EAAgBgE,kBAAmBA,IAEnE,6BACA,2BAAOlD,QAAQ,sBAAf,cACA,8BAAUJ,GAAG,qBAAqBhD,UAAU,sBAC1C,6BACE,2BAAOA,UAAU,YAAYoD,QAAQ,UAArC,UAGA,2BACEJ,GAAG,SACHK,KAAK,OACLE,SAAU,SAACI,GAAD,OAAWwD,EAAY,2BAAKtE,GAAN,IAAgBiE,WAAYnD,EAAME,OAAOC,UACzEA,MAAOjB,EAASiE,cAIpB,6BACE,2BAAO9G,UAAU,YAAYoD,QAAQ,QAArC,QAGA,4BACEJ,GAAG,OACHc,MAAOjB,EAASQ,KAChBE,SAAU,SAACI,GAAD,OAAWwD,EAAY,2BAAKtE,GAAN,IAAgBQ,KAAMM,EAAME,OAAOC,WAEnE,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,mBAAd,qBAIJ,6BACE,2BAAO9D,UAAU,YAAYoD,QAAQ,QAArC,QAGA,8BACEJ,GAAG,OACHhD,UAAU,eACVuD,SAAU,SAACI,GAAD,OAAWwD,EAAY,2BAAKtE,GAAN,IAAgB2C,KAAM7B,EAAME,OAAOC,UACnE8B,KAAK,IACLC,KAAK,KACL/B,OAYY0B,EAZY3C,EAAS2C,KAatB,kBAATA,EAAoBC,KAAKC,UAAUF,GAAQA,OATnD,kBAACgB,EAAD,CAAYC,OAAQA,M,MCxFrB,SAASe,EAAUC,GACxB,OAAO,kBAACC,EAAD,eAAOC,MAAK,YAAOF,EAAMG,WAAgBH,IAGlD,SAASC,EAAT,GAA8C,IAA7BC,EAA4B,EAA5BA,MAAOX,EAAqB,EAArBA,QAASjH,EAAY,EAAZA,SAC/B,OACE,oCACE,yBAAKC,UAAU,MAAMoH,UAAW,SAACrB,GAAD,OAAqB,KAAdA,EAAEsB,SAAkBL,MACzD,wBAAIhH,UAAU,gBACX2H,EACD,4BAAQ3H,UAAU,cAAcoB,QAAS4F,GACvC,uBAAGhH,UAAU,kBAAb,SADF,UAIF,yBAAKA,UAAU,mBAAmBD,IAEpC,yBAAKC,UAAU,4BChBd,SAAS6H,IAAY,IAAD,EACDrH,mBAAS,MADR,mBAClBsH,EADkB,KACZC,EADY,KAEjB/E,EAAOgF,cAAPhF,GACF5C,EAAUC,cACVC,EAAWC,cAEjBQ,qBAAU,WAAM,4CACd,4BAAAI,EAAA,+EAEuByF,QAAMqB,QAAQjF,GAFrC,OAEU8E,EAFV,OAGIC,EAAQD,GAHZ,gDAKIC,EAAQ,aALZ,0DADc,uBAAC,WAAD,wBASdG,KACC,CAAClF,IAEJ,IAAMmF,EAAQ,kBAAM/H,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,gBAAmCpF,GAAM,MAa1E,OACE,kBAACwE,EAAD,CAAWI,SAAU,OAAQZ,QAASmB,GAZxC,SAAiBL,GACf,OAAQA,GACN,KAAK,KACH,OAAO,+CACT,IAAK,YACH,OAAO,sDAA4B9E,EAA5B,KACT,QACE,OAAO,kBAAC+D,EAAD,CAAYC,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAYY,KAMhEI,CAAQJ,IAKR,SAASO,IACd,IAAMjI,EAAUC,cACVC,EAAWC,cAEX4H,EAAQ,kBAAM/H,EAAQiB,KAAKjB,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,OAAkC,OAEhF,OACE,kBAACZ,EAAD,CAAWI,SAAU,OAAQZ,QAASmB,GACpC,kBAACpB,EAAD,CAAYC,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAY,Q,MC9CvD,SAASoB,EAAT,GAA4B,IAAXC,EAAU,EAAVA,OAChBnI,EAAUC,cAEVM,EAAK,uCAAG,WAAO6H,GAAP,SAAArH,EAAA,sEAAqBoH,EAAOE,WAAWD,GAAvC,mFAAH,sDACL5H,EAAK,uCAAG,sBAAAO,EAAA,sEAAkBoH,EAAOG,aAAzB,mFAAH,qDAELC,EAAW,SAAC/G,GAAD,OAAUxB,EAAQiB,KAAR,4BAAkCO,EAAKoB,MAElE,OACE,oCACE,kBAAC,IAAD,CAAO4F,KAAK,yBACV,kBAACf,EAAD,OAEF,kBAAC,IAAD,CAAOe,KAAK,oBACV,kBAACP,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEnI,eAAgB,CAAES,QAAOC,SACzBT,aAAc,CAAEU,MAAO,QAASC,KAAM,gBAAiBd,UAAW,SAClE6I,WAAW,GAEV,CACCtH,KAAM,SAACd,EAAOuB,GAAR,OAAc,kBAACI,EAAD,CAAW3B,MAAOA,EAAO4B,SAAU,KAAMZ,YAAakH,KAC1EG,QAAS,SAAC9G,GAAD,OAAO,sCAChB+G,OAAQ,SAAC/G,GAAD,OAAO,0CC7BpB,SAASgH,EAAT,GAAsD,IAAjCvI,EAAgC,EAAhCA,MAAO4B,EAAyB,EAAzBA,SAAUZ,EAAe,EAAfA,YAC3C,OACE,kBAACD,EAAD,CACEf,MAAOA,EACP4B,SAAUA,EACVZ,YAAaA,EACbC,OAAQ,CAAEI,UAAW,UAAWC,UAAW,aAC3CJ,QAAS,SAACC,GAAD,gBAAaA,EAAKW,IAAlB,UACTC,eAAgB,SAACH,EAAUI,GAAX,OAAuBJ,EAASE,MAAQE,EAAQF,MAE/D,CACCX,KAAM,SAACA,GAAD,OAAU,kBAACqH,EAAD,CAAcrH,KAAMA,OAM5C,SAASqH,EAAT,GAAiC,IAATrH,EAAQ,EAARA,KACtB,OACE,2BACE,0BAAM5B,UAAU,OAAO4B,EAAKW,KAC5B,wCACA,0BAAMvC,UAAU,MAAM4B,EAAKsH,U,MCrBNxC,EAAQ,GAA3BC,E,EAAAA,QAASwC,G,EAAAA,MAEXtC,GACY,CAAEtE,IAAK,IADnBsE,GAEE,CAAEqC,QAAS,GAAIE,aAAa,EAAO3I,MAAO,IAE3C,SAAS4I,GAAT,GAAuD,IAAD,EAoFnC7D,EApFGwB,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACvClE,EAAE,OAAGkE,QAAH,IAAGA,OAAH,EAAGA,EAAYlE,GADoC,EAE7BxC,mBAAQ,iBAAC0G,QAAD,IAACA,OAAD,EAACA,EAAYrF,eAAb,UAFqB,mBAEpDA,EAFoD,KAE3CoB,EAF2C,OAGvBzC,mBAAS,2BACxCqG,IADuC,OAEvCK,QAFuC,IAEvCA,OAFuC,EAEvCA,EAAY5E,iBAL0C,mBAGpDmB,EAHoD,KAGxC6F,EAHwC,OAQnC9I,mBAAS,2BAC5BqG,IAD2B,OAE3BK,QAF2B,IAE3BA,OAF2B,EAE3BA,EAAYqC,OAV0C,mBAQpDA,EARoD,KAQ9CC,EAR8C,cAa5C/C,IAb4C,2EAa3D,sBAAAtF,EAAA,sEACQwF,EAAQ,CAAE3D,KAAIV,eAAgB,CAAEC,IAAKkB,EAAWlB,KAAOgH,SAD/D,OAEEtC,IAFF,4CAb2D,sBAkB3D,OACE,0BACEG,UAAW,SAACrB,GAAD,OAAqB,KAAdA,EAAEsB,SAAkBL,KACtChH,UAAY6B,EAA6B,GAAnB,iBACtByF,SAAU,SAAC3D,GACTA,EAAM4D,iBACNd,MAGF,kBAAC,EAAD,CACEzD,GAAE,OAAEkE,QAAF,IAAEA,OAAF,EAAEA,EAAYlE,GAChBnB,QAASA,EACToB,WAAYA,EACZC,eAAgBiG,GAAMlG,aAGxB,8BAAUjD,UAAU,iBAAiB4E,UAAW/C,GAC9C,kBAAC2B,EAAD,CAAYC,WAAYA,EAAWlB,IAAKgB,SAAU,SAAChB,GAAD,OAAS+G,EAAc,CAAE/G,WAE3E,6BACE,2BAAOvC,UAAU,YAAYoD,QAAQ,WAArC,YAGA,2BACEJ,GAAG,UACHK,KAAK,OACLE,SAAU,SAACI,GAAD,OAAW6F,EAAQ,2BAAKD,GAAN,IAAYL,QAASvF,EAAME,OAAOC,UAC9DA,MAAOyF,EAAKL,WAIhB,2BAAOlJ,UAAU,YAAYoD,QAAQ,uBAArC,iBAGA,2BACEJ,GAAG,sBACHK,KAAK,WACLrD,UAAU,oBACVuD,SAAU,SAACI,GAAD,OAAW6F,EAAQ,2BAAKD,GAAN,IAAYH,YAAazF,EAAME,OAAOP,YAClEA,QAASiG,EAAKH,cAGhB,6BACE,2BAAOpJ,UAAU,YAAYoD,QAAQ,YAArC,YAGA,8BACEJ,GAAG,WACHc,OAkBc0B,EAlBS,OAAC+D,QAAD,IAACA,OAAD,EAACA,EAAM9I,MAmBjB,kBAAT+E,EAAoBC,KAAKC,UAAUF,EAAM,KAAM,GAAKA,GAlBxDjC,SAAU,SAACI,GAAD,OACR6F,EAAQ,2BACHD,GADE,IAEL9I,MAAOkF,GAAehC,EAAME,OAAOC,WAGvC8B,KAAK,KACLC,KAAK,KACL7F,UAAU,cAGd,kBAACwG,EAAD,CAAYC,OAAQA,MAU5B,SAASd,GAAeH,GACtB,IACE,OAAOC,KAAKK,MAAMN,GAClB,MAAOO,GACP,OAAOP,GC/FJ,SAASiE,KAAY,IAAD,EACDjJ,mBAAS,MADR,mBAClB+I,EADkB,KACZC,EADY,KAEjBxG,EAAOgF,cAAPhF,GACF5C,EAAUC,cACVC,EAAWC,cAEjBQ,qBAAU,WAAM,4CACd,4BAAAI,EAAA,+EAEuBgI,QAAMlB,QAAQjF,GAFrC,OAEUuG,EAFV,OAGIC,EAAQD,GAHZ,gDAKIC,EAAQ,aALZ,0DADc,uBAAC,WAAD,wBASdE,KACC,CAAC1G,IAEJ,IAAMmF,EAAQ,kBAAM/H,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,gBAAmCpF,GAAM,MAa1E,OACE,kBAACwE,EAAD,CAAWI,SAAU,OAAQZ,QAASmB,GAZxC,SAAiBoB,GACf,OAAQA,GACN,KAAK,KACH,OAAO,+CACT,IAAK,YACH,OAAO,sDAA4BvG,EAA5B,KACT,QACE,OAAO,kBAACqG,GAAD,CAAYrC,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAYqC,KAMhEG,CAAQH,IAKR,SAASI,KACd,IAAMvJ,EAAUC,cACVC,EAAWC,cAEX4H,EAAQ,kBAAM/H,EAAQiB,KAAKjB,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,OAAkC,OAEhF,OACE,kBAACZ,EAAD,CAAWI,SAAU,OAAQZ,QAASmB,GACpC,kBAACkB,GAAD,CAAYrC,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAY,QC9CvD,SAAS0C,GAAT,GAA4B,IAAXrB,EAAU,EAAVA,OAChBnI,EAAUC,cAEVM,EAAK,uCAAG,WAAO6H,GAAP,SAAArH,EAAA,sEAAqBoH,EAAOsB,WAAWrB,GAAvC,mFAAH,sDACL5H,EAAK,uCAAG,sBAAAO,EAAA,sEAAkBoH,EAAOuB,aAAzB,mFAAH,qDAELnB,EAAW,SAAC/G,GAAD,OAAUxB,EAAQiB,KAAR,4BAAkCO,EAAKoB,MAElE,OACE,oCACE,kBAAC,IAAD,CAAO4F,KAAK,yBACV,kBAACa,GAAD,OAEF,kBAAC,IAAD,CAAOb,KAAK,oBACV,kBAACe,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEzJ,eAAgB,CAAES,QAAOC,SACzBT,aAAc,CAAEU,MAAO,QAASC,KAAM,gBAAiBd,UAAW,SAClE6I,WAAW,GAEV,CACCtH,KAAM,SAACd,EAAOuB,GAAR,OAAc,kBAACgH,EAAD,CAAWvI,MAAOA,EAAO4B,SAAU,KAAMZ,YAAakH,KAC1EG,QAAS,SAAC9G,GAAD,OAAO,sCAChB+G,OAAQ,SAAC/G,GAAD,OAAO,0CC7BpB,SAAS+H,GAAT,GAA0D,IAAjCtJ,EAAgC,EAAhCA,MAAO4B,EAAyB,EAAzBA,SAAUZ,EAAe,EAAfA,YAC/C,OACE,kBAACD,EAAD,CACEf,MAAOA,EACP4B,SAAUA,EACVZ,YAAaA,EACbC,OAAQ,CAAEI,UAAW,WAAYC,UAAW,iBAC5CJ,QAAS,SAACC,GAAD,gBAAaA,EAAKU,eAAeC,IAAjC,UACTC,eAAgB,SAACH,EAAUI,GAAX,OACdJ,EAASC,eAAeC,MAAQE,EAAQH,eAAeC,MAGxD,CACCX,KAAM,SAACA,GAAD,OAAU,kBAACoI,GAAD,CAAkBpI,KAAMA,OAMhD,SAASoI,GAAT,GAAqC,IAAD,IAARpI,EAAQ,EAARA,KAC1B,OACE,2BACE,0BAAM5B,UAAU,OAAO4B,EAAKU,eAAeC,KAC3C,0BAAMvC,UAAU,iBAAhB,UAAiC4B,EAAKU,sBAAtC,iBAAiC,EAAqBmB,kBAAtD,aAAiC,EAAiCwG,eAClE,wCACA,0BAAMjK,UAAU,kBACb4B,EAAKsI,UAAUC,SAASjF,OAD3B,WAC2CtD,EAAKsI,UAAUC,SAASjF,OAAS,EAAI,IAAM,K,IC1BpFgF,GAAcxD,EAAQ,GAAtBwD,UAEFrD,GACY,CAAEtE,IAAK,IAGlB,SAAS6H,GAAT,GAAkD,IAAD,EAAvBpD,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,WAClClE,EAAE,OAAGkE,QAAH,IAAGA,OAAH,EAAGA,EAAYlE,GAD+B,EAExBxC,mBAAQ,iBAAC0G,QAAD,IAACA,OAAD,EAACA,EAAYrF,eAAb,UAFgB,mBAE/CA,EAF+C,KAEtCoB,EAFsC,OAGVzC,mBAAS,2BAChDqG,IAD+C,OAE/CK,QAF+C,IAE/CA,OAF+C,EAE/CA,EAAY5E,iBALqC,mBAG/CA,EAH+C,KAG/BgE,EAH+B,iDAQtD,sBAAAnF,EAAA,2FARsD,sBAUtD,OACE,0BACEiG,UAAW,SAACrB,GAAD,OAAqB,KAAdA,EAAEsB,SAAkBL,KACtChH,UAAY6B,EAA6B,GAAnB,iBACtByF,SAAU,SAAC3D,GACTA,EAAM4D,iBAf0C,mCAgBhDd,KAGF,kBAAC,EAAD,CACEzD,GAAIA,EACJnB,QAASA,EACToB,WAAYA,EACZC,eAAgBgH,GAAUjH,aAE5B,8BAAUjD,UAAU,iBAAiB4E,UAAW/C,GAC9C,kBAAC,EAAD,CAAgBS,eAAgBA,EAAgBgE,kBAAmBA,IAEnE,6BAEA,yFAEA,8BAAUV,KAAM,GAAIC,KAAM,GAAI/B,MAAO2B,KAAKC,UAAL,OAAewB,QAAf,IAAeA,OAAf,EAAeA,EAAYgD,UAAW,KAAM,OClClF,SAASG,KAAgB,IAAD,EACG7J,mBAAS,MADZ,mBACtB8J,EADsB,KACZC,EADY,KAErBvH,EAAOgF,cAAPhF,GACF5C,EAAUC,cACVC,EAAWC,cAEjBQ,qBAAU,WAAM,4CACd,4BAAAI,EAAA,+EAE2B+I,YAAUjC,QAAQjF,GAF7C,OAEUsH,EAFV,OAGIC,EAAYD,GAHhB,gDAKIC,EAAY,aALhB,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACxH,IAEJ,IAAMmF,EAAQ,kBAAM/H,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,gBAAmCpF,GAAM,MAa1E,OACE,kBAACwE,EAAD,CAAWI,SAAU,WAAYZ,QAASmB,GAZ5C,SAAqBmC,GACnB,OAAQA,GACN,KAAK,KACH,OAAO,+CACT,IAAK,YACH,OAAO,0DAAgCtH,EAAhC,KACT,QACE,OAAO,kBAACoH,GAAD,CAAgBpD,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAYoD,KAMpEE,CAAYF,IAKZ,SAASG,KACd,IAAMrK,EAAUC,cACVC,EAAWC,cAEX4H,EAAQ,kBAAM/H,EAAQiB,KAAKjB,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,OAAkC,OAEhF,OACE,kBAACZ,EAAD,CAAWI,SAAU,WAAYZ,QAASmB,GACxC,kBAACiC,GAAD,CAAgBpD,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAY,Q,MC9C3D,SAASwD,GAAT,GAAgC,IAAXnC,EAAU,EAAVA,OACpBnI,EAAUC,cAEVM,EAAK,uCAAG,WAAO6H,GAAP,SAAArH,EAAA,sEAAqBoH,EAAOoC,eAAenC,GAA3C,mFAAH,sDACL5H,EAAK,uCAAG,sBAAAO,EAAA,sEAAkBoH,EAAOqC,iBAAzB,mFAAH,qDAELjC,EAAW,SAAC/G,GAAD,OAAUxB,EAAQiB,KAAR,gCAAsCO,EAAKoB,MAEtE,OACE,oCACE,kBAAC,IAAD,CAAO4F,KAAK,6BACV,kBAACyB,GAAD,OAEF,kBAAC,IAAD,CAAOzB,KAAK,wBACV,kBAAC6B,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEvK,eAAgB,CAAES,QAAOC,SACzBT,aAAc,CAAEU,MAAO,YAAaC,KAAM,gBAAiBd,UAAW,aACtE6I,WAAW,GAEV,CACCtH,KAAM,SAACd,EAAOuB,GAAR,OACJ,kBAAC+H,GAAD,CAAetJ,MAAOA,EAAO4B,SAAU,KAAMZ,YAAakH,KAE5DG,QAAS,SAAC9G,GAAD,OAAO,sCAChB+G,OAAQ,SAAC/G,GAAD,OAAO,0CC5B3B,IAAM6E,GACY,CAAEtE,IAAK,IADnBsE,GAEG,CAAEgE,eAAgB,IAEpB,SAASC,GAAT,GAAwD,IAAD,EAAhC9D,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACxClE,EAAE,OAAGkE,QAAH,IAAGA,OAAH,EAAGA,EAAYlE,GADqC,EAE9BxC,mBAAQ,iBAAC0G,QAAD,IAACA,OAAD,EAACA,EAAYrF,eAAb,UAFsB,mBAErDA,EAFqD,KAE5CoB,EAF4C,OAGhBzC,mBAAS,2BAChDqG,IAD+C,OAE/CK,QAF+C,IAE/CA,OAF+C,EAE/CA,EAAY5E,iBAL2C,mBAGrDA,EAHqD,KAGrCgE,EAHqC,OAO/B9F,mBAAS,2BACjCqG,IADgC,OAEhCK,QAFgC,IAEhCA,OAFgC,EAEhCA,EAAY6D,QAT2C,mBAOrDA,EAPqD,KAO9CC,EAP8C,cAY7CvE,IAZ6C,2EAY5D,sBAAAtF,EAAA,sEACQwF,kBAAQ,CAAE3D,KAAIV,iBAAgByI,UADtC,OAEE9D,IAFF,4CAZ4D,sBAiB5D,OACE,0BACEG,UAAW,SAACrB,GAAD,OAAqB,KAAdA,EAAEsB,SAAkBL,KACtChH,UAAY6B,EAA6B,GAAnB,iBACtByF,SAAU,SAAC3D,GACTA,EAAM4D,iBACNd,MAGF,kBAAC,EAAD,CACEzD,GAAE,OAAEkE,QAAF,IAAEA,OAAF,EAAEA,EAAYlE,GAChBnB,QAASA,EACToB,WAAYA,EACZC,eAAgB+H,QAAOhI,aAGzB,8BAAUjD,UAAU,iBAAiB4E,UAAW/C,GAC9C,kBAAC,EAAD,CAAgBS,eAAgBA,EAAgBgE,kBAAmBA,IAEnE,6BACE,wCACA,2BAAOtG,UAAU,YAAYoD,QAAQ,kBAArC,aAGA,2BACEJ,GAAG,iBACHK,KAAK,OACLE,SAAU,SAACI,GAAD,OAAWqH,EAAY,2BAAKD,GAAN,IAAaF,eAAgBlH,EAAME,OAAOC,UAC1EA,MAAOiH,EAAMF,kBAIjB,kBAACrE,EAAD,CAAYC,OAAQA,MCpDrB,SAASyE,KAAa,IAAD,EACA1K,mBAAS,MADT,mBACnBuK,EADmB,KACZI,EADY,KAElBnI,EAAOgF,cAAPhF,GACF5C,EAAUC,cACVC,EAAWC,cAEjBQ,qBAAU,WAAM,4CACd,4BAAAI,EAAA,+EAEwBiK,QAASnD,QAAQjF,GAFzC,OAEU+H,EAFV,OAGII,EAASJ,GAHb,gDAKII,EAAS,aALb,0DADc,uBAAC,WAAD,wBASdE,KACC,CAACrI,IAEJ,IAAMmF,EAAQ,kBAAM/H,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,gBAAmCpF,GAAM,MAa1E,OACE,kBAACwE,EAAD,CAAWI,SAAU,QAASZ,QAASmB,GAZzC,SAAkB4C,GAChB,OAAQA,GACN,KAAK,KACH,OAAO,+CACT,IAAK,YACH,OAAO,uDAA6B/H,EAA7B,KACT,QACE,OAAO,kBAAC8H,GAAD,CAAa9D,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAY6D,KAMjEM,CAASN,IAKT,SAASO,KACd,IAAMlL,EAAUC,cACVC,EAAWC,cAEX4H,EAAQ,kBAAM/H,EAAQiB,KAAKjB,EAAQiB,KAAKf,EAASU,SAASoH,QAAlB,OAAkC,OAEhF,OACE,kBAACZ,EAAD,CAAWI,SAAU,QAASZ,QAASmB,GACrC,kBAAC2C,GAAD,CAAa9D,QAASmB,EAAOlB,QAASkB,EAAOjB,WAAY,QClDxD,SAASqE,GAAT,GAAsD,IAAjC9K,EAAgC,EAAhCA,MAAO4B,EAAyB,EAAzBA,SAAUZ,EAAe,EAAfA,YAC3C,OACE,kBAACD,EAAD,CACEf,MAAOA,EACP4B,SAAUA,EACVZ,YAAaA,EACbC,OAAQ,CAAEI,UAAW,WAAYC,UAAW,aAC5CJ,QAAS,SAACC,GAAD,gBAAaA,EAAKU,eAAeC,IAAjC,UACTC,eAAgB,SAACH,EAAUI,GAAX,OACdJ,EAASC,eAAeC,MAAQE,EAAQH,eAAeC,MAGxD,CACCX,KAAM,SAACA,GAAD,OAAU,kBAAC4J,GAAD,CAAe5J,KAAMA,OAM7C,SAAS4J,GAAT,GAAkC,IAAT5J,EAAQ,EAARA,KACvB,OACE,2BACE,0BAAM5B,UAAU,OAAO4B,EAAKU,eAAeC,KAC3C,yCACA,0BAAMvC,UAAU,YAAY4B,EAAKmJ,MAAMF,iBCpBtC,SAASY,GAAT,GAA4B,IAAXlD,EAAU,EAAVA,OAChBnI,EAAUC,cAEVM,EAAK,uCAAG,WAAO6H,GAAP,SAAArH,EAAA,sEAAqBoH,EAAOmD,WAAWlD,GAAvC,mFAAH,sDACL5H,EAAK,uCAAG,sBAAAO,EAAA,sEAAkBoH,EAAOoD,aAAzB,mFAAH,qDAELhD,EAAW,SAAC/G,GAAD,OAAUxB,EAAQiB,KAAR,4BAAkCO,EAAKoB,MAElE,OACE,oCACE,kBAAC,IAAD,CAAO4F,KAAK,yBACV,kBAACsC,GAAD,OAEF,kBAAC,IAAD,CAAOtC,KAAK,oBACV,kBAAC0C,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEpL,eAAgB,CAAES,QAAOC,SACzBT,aAAc,CAAEU,MAAO,QAASC,KAAM,OAAQd,UAAW,aACzD6I,WAAW,GAEV,CACCtH,KAAM,SAACd,EAAOuB,GAAR,OAAc,kBAACuJ,GAAD,CAAW9K,MAAOA,EAAO4B,SAAU,KAAMZ,YAAakH,KAC1EG,QAAS,SAAC9G,GAAD,OAAO,sCAChB+G,OAAQ,SAAC/G,GAAD,OAAO,0C,aC9BpB,SAAS4J,GAAT,GAAmC,IAAhBhK,EAAe,EAAfA,KAAMiK,EAAS,EAATA,MACtB7I,EAA6BpB,EAA7BoB,GAAIV,EAAyBV,EAAzBU,eAAgBe,EAASzB,EAATyB,KACtBjD,EAAUC,cACVyL,EAAW,iBAAazI,EAAK/B,cAAlB,iBAAwC0B,GACzD,OACE,uBACEhD,UAAU,kBACV+L,KAAMD,EACN1K,QAAS,SAAC2E,GACRA,EAAEwB,iBACFnH,EAAQiB,KAAKyK,KAIf,uBAAG9L,UAAU,8BAAb,SACC6L,EAAQ,GAAR,UAAgBA,EAAhB,MACAvJ,EAAeK,OAXlB,IAW2BL,EAAeC,KAKvC,SAASyJ,GAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,eAAgBJ,EAAS,EAATA,MAClCtJ,EAA+B0J,EAA/B1J,IAAKI,EAA0BsJ,EAA1BtJ,OAAQ4D,EAAkB0F,EAAlB1F,QAASf,EAASyG,EAATzG,KACxBpF,EAAUC,cAEhB,OACE,uBACEL,UAAU,kBACV+L,KAJgB,mBAKhB3K,QAAS,SAAC2E,GACRA,EAAEwB,iBACFnH,EAAQiB,KAPM,sBAUhB,uBAAGrB,UAAU,4BAAb,SACC6L,EAAQ,GAAR,UAAgBA,EAAhB,MACAlJ,EAVH,IAUYJ,EAVZ,IAUkBkD,KAAKC,UAAUa,GAVjC,IAU4Cd,KAAKC,UAAUF,ICnCxD,SAAS0G,GAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAAgB,EACvB3L,oBAAS,GADc,mBAC1C4L,EAD0C,KACnCC,EADmC,KAEjD,OACE,oCACE,yBAAKrM,UAAU,2BACb,4BAAQA,UAAU,oBAAoBoB,QAAS,kBAAMiL,GAAUD,KAA/D,SACQ,uBAAGpM,UAAU,kBAAb,gBAGV,yBAAKA,UAAU,oBACZiC,kBAAQkK,IAAiB,uBAAGnM,UAAU,kBAAb,uBACzBoM,EACC,kBAACE,GAAD,CAAqBH,aAAcA,IAEnC,kBAACI,GAAD,CAAiBJ,aAAcA,MAOzC,SAASI,GAAT,GAA4C,IAAjBJ,EAAgB,EAAhBA,aACzB,OACE,oCACGA,EAAajK,KAAI,SAACsK,EAAa7H,GAAd,OAChB,yBAAK3E,UAAU,cAAcmC,IAAG,UAAKwC,EAAL,iBAC7B6H,EAAYC,QACX,kBAACb,GAAD,CAAShK,KAAM4K,EAAY5K,OAE3B,kBAACoK,GAAD,CAAWC,eAAgBO,EAAYP,sBAQnD,SAASK,GAAT,GAAgD,IAAjBH,EAAgB,EAAhBA,aACvBO,EACJP,EAAaQ,QAAO,SAACH,GAAD,OAAyC,IAAxBA,EAAYC,WAuBxBG,QAAO,SAACC,EAAUpK,GAC3C,IAGO,EAHD2J,EAAQS,EAASC,MAAK,SAACV,GAAD,aAAWA,EAAMpJ,MAAN,OAAaP,QAAb,IAAaA,GAAb,UAAaA,EAASb,YAAtB,aAAa,EAAeoB,OAUnE,OATIoJ,EACFA,EAAMP,OAAS,EAEfgB,EAASxL,KAAK,CACZwK,MAAO,EACP7I,GAAE,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAASb,YAAX,aAAE,EAAeoB,GACnBpB,KAAMa,EAAQb,OAGXiL,IACN,IAjCGE,EACJZ,EAAaQ,QAAO,SAACH,GAAD,OAAyC,IAAxBA,EAAYC,WAoCtBG,QAAO,SAACC,EAAUpK,GAC7C,IAAM2J,EAAQS,EAASC,MAAK,SAACV,GAAD,OAAWY,kBAAQZ,EAAMH,eAAP,OAAuBxJ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAASwJ,mBAS9E,OARIG,EACFA,EAAMP,OAAS,EAEfgB,EAASxL,KAAK,CACZwK,MAAO,EACPI,eAAgBxJ,EAAQwJ,iBAGrBY,IACN,IA5CH,OACE,oCACGH,EAAexK,KAAI,SAACkK,EAAOzH,GAAR,OAClB,yBAAK3E,UAAU,cAAcmC,IAAG,UAAKwC,EAAL,iBAC9B,kBAACiH,GAAD,CAAShK,KAAMwK,EAAMxK,KAAMiK,MAAOO,EAAMP,YAG3CkB,EAAiB7K,KAAI,SAACkK,EAAOzH,GAAR,OACpB,yBAAK3E,UAAU,cAAcmC,IAAG,UAAKwC,EAAL,iBAC9B,kBAACqH,GAAD,CAAWC,eAAgBG,EAAMH,eAAgBJ,MAAOO,EAAMP,a,MClDjE,SAASoB,GAAT,GAAqC,IAAblN,EAAY,EAAZA,SAAY,EACbS,mBAAS,MADI,mBAClC0M,EADkC,KAC1BC,EAD0B,OAEe3M,mBAAS,IAFxB,mBAElC4M,EAFkC,KAEZC,EAFY,iDAiBzC,sBAAAlM,EAAA,sEACQmM,8BADR,OAEED,EAAwB,IAF1B,4CAjByC,sBAsBzC,OAlBAtM,qBAAU,WAAM,4CACd,oCAAAI,EAAA,sEACyBoM,4BADzB,OACQ1K,EADR,SAEgEA,EAAS2K,KAAjDJ,EAFxB,EAEUjB,aAAoCsB,EAF9C,EAE8CA,cAC5CJ,EAAwBD,GAClBF,EAAS,IAAIQ,UAAJ,yBAAgCD,EAAhC,kBACfN,EAAUD,GALZ,4CADc,sBAQC,OAAXA,GARW,WAAD,wBASZS,KAED,CAACT,IAQF,yBAAKlN,UAAU,SACb,2CACc,uBAAGA,UAAU,kBAAb,cACXD,EACD,4BAAQC,UAAU,oBAAoBoB,QA3BH,4CA4BjC,uBAAGpB,UAAU,kBAAb,aADF,WAIDkN,EACC,kBAACU,GAAD,CAAsBV,OAAQA,EAAQE,qBAAsBA,IAE5D,iBAMR,SAASQ,GAAT,GAAiE,IAAjCV,EAAgC,EAAhCA,OAAQE,EAAwB,EAAxBA,qBAAwB,EACtB5M,mBAAS4M,GADa,mBACvDjB,EADuD,KACzC0B,EADyC,KAY9D,OATA9M,qBAAU,WACR8M,EAAgBT,KACf,CAACA,IAEJF,EAAOY,UAAY,SAACC,GAClB,IAAMC,EAAavI,KAAKK,MAAMiI,EAAQP,MACtCK,EAAgB,GAAD,oBAAK1B,GAAL,CAAmB6B,MAG7B,kBAAC9B,GAAD,CAAkBC,aAAcA,I,MCvD1B,SAAS8B,GAAT,GAA6B,IAAblO,EAAY,EAAZA,SACvBO,EAAWC,cACjB,OACE,yBAAKP,UAAU,eACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,CACEkO,GAAG,eACHlO,UAAiC,iBAAtBM,EAASU,SAA8B,cAAgB,OAFpE,SAIQ,uBAAGhB,UAAU,kBAAb,kBAER,kBAAC,IAAD,CACEkO,GAAG,mBACHlO,UAAiC,qBAAtBM,EAASU,SAAkC,cAAgB,OAFxE,aAIY,uBAAGhB,UAAU,kBAAb,gBAEZ,kBAAC,IAAD,CACEkO,GAAG,eACHlO,UAAiC,iBAAtBM,EAASU,SAA8B,cAAgB,OAFpE,SAIQ,uBAAGhB,UAAU,kBAAb,eAER,kBAAC,IAAD,CACEkO,GAAG,eACHlO,UAAiC,iBAAtBM,EAASU,SAA8B,cAAgB,OAFpE,SAIQ,uBAAGhB,UAAU,kBAAb,UAGTD,G,MCnBP,SAASoO,GAAT,GAA6B,IAAbpO,EAAY,EAAZA,SAAY,EACGqO,KAArBC,EADkB,EAClBA,QAASC,EADS,EACTA,QADS,EAEc9N,oBAAS,GAFvB,mBAEnB2L,EAFmB,KAEL0B,EAFK,KAI1B,OAAIS,EAEA,oCACGvO,EACD,wBAAIC,UAAU,WAAd,kBAMJ,yBAAKA,UAAU,QACZD,EACD,yBAAKC,UAAU,QACb,kBAAC,GAAD,MACImM,GACA,4BAAQnM,UAAU,gBAAgBoB,QAAS,kBAAMyM,GAAgB,KAAjE,uBAMN,yBAAK7N,UAAU,UACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4I,KAAK,gBACV,kBAACN,EAAD,CAAOC,OAAQ8F,EAAQE,cAEzB,kBAAC,IAAD,CAAO3F,KAAK,oBACV,kBAAC,GAAD,CAAWL,OAAQ8F,EAAQG,mBAE7B,kBAAC,IAAD,CAAO5F,KAAK,gBACV,kBAACgB,GAAD,CAAOrB,OAAQ8F,EAAQI,cAEzB,kBAAC,IAAD,CAAO7F,KAAK,gBACV,kBAAC6C,GAAD,CAAOlD,OAAQ8F,EAAQK,eAEzB,kBAAC,IAAD,CAAUR,GAAG,mBAGhB/B,GACC,yBAAKnM,UAAU,aACb,kBAAC,GAAD,KACE,4BAAQA,UAAU,gBAAgBoB,QAAS,kBAAMyM,GAAgB,KAAjE,YAWd,IAAMO,GAAa,WAAO,IAAD,EACC5N,mBAAS,MADV,mBAChBmO,EADgB,KACVC,EADU,OAEOpO,oBAAS,GAFhB,mBAEhB8N,EAFgB,KAEPO,EAFO,KAkBvB,OAdA9N,qBAAU,YACO,uCAAG,8BAAAI,EAAA,6DACV2N,EAAKC,IAAMhG,SADD,SAEO+F,EAAGE,IAAI,eAFd,OAEVnM,EAFU,OAGhB+L,EAAQ/L,EAAS2K,KAAKmB,MACtBM,kBAAkBpM,EAAS2K,KAAKmB,MAChCE,GAAW,GALK,2CAAH,qDAQfK,MAKK,CACLZ,UACAD,QAAS,CACPE,WAAY,IAAIY,IAAMC,WAAWT,GACjCF,WAAY,IAAIU,IAAME,WAAWV,GACjCH,gBAAiB,IAAIW,IAAMG,gBAAgBX,GAC3CD,YAAa,IAAIS,IAAMI,YAAYZ,GACnCa,eAAgB,IAAIL,IAAMM,gBAAgBd,M,MC7FzC,SAASe,GAAT,GAA8B,IAAb3P,EAAY,EAAZA,SACtB,OACE,oCACE,wBAAIC,UAAU,cAAd,SACA,4BAAKD,IAKJ,SAAS4P,GAAT,GAAoC,IAElBzB,EAFEtF,EAAe,EAAfA,KAAM/H,EAAS,EAATA,MACvBG,EAAaT,cAAbS,SAGR,OACE,wBAAIhB,UAAU,gBAAgBmC,IAAKyG,GACjC,kBAAC,IAAD,CAAMsF,GAAItF,EAAM5I,WAJGkO,EAIsBtF,EAJd5H,EAAS4O,WAAW1B,GAAM,mBAAqB,aAKvErN,IAMF,SAASgP,GAAT,GAAuC,IAAhBjH,EAAe,EAAfA,KAAM/H,EAAS,EAATA,MAC5BiP,EAAWlH,EAAKmH,MAAM,KAC5BD,EAASE,MACT,IAAMC,EAASH,EAASI,KAAK,KACrBlP,EAAaT,cAAbS,SAEFmP,EAAgBnP,IAAa4H,EAAO,sBAAwB,cAElE,OACE5H,EAAS4O,WAAWK,IAClB,wBAAIjQ,UAAU,mBAAmBmC,IAAKyG,GACpC,kBAAC,IAAD,CAAMsF,GAAItF,EAAM5I,UAAWmQ,GACxBtP,I,MClCX,SAASuP,GAAT,GAAiC,IAAbrQ,EAAY,EAAZA,SAClB,OAAO,kBAAC,IAAD,KAASA,GCHX,SAASsQ,GAAT,GAAkC,IAAV1I,EAAS,EAATA,MAC7B,OAAO,wBAAI3H,UAAU,iBAAiB2H,GAGjC,SAAS2I,GAAT,GAA8C,IAAD,IAA7BC,mBAA6B,MAAf,EAAe,EAAZxQ,EAAY,EAAZA,SACtC,OAAO,yBAAKC,UAAU,QAAQyF,KAAKC,UAAU3F,EAAU,KAAMwQ,IAGxD,SAASC,GAAT,GAAoC,IAAbzQ,EAAY,EAAZA,SAC5B,OAAO,yBAAKC,UAAU,QAAQD,GAGzB,SAAS0Q,GAAT,GAAmC,IAAb1Q,EAAY,EAAZA,SAC3B,OAAO,0BAAMC,UAAU,QAAQD,GAG1B,SAAS2Q,GAAT,GAAiC,IAAjBxC,EAAgB,EAAhBA,GAAInO,EAAY,EAAZA,SACzB,OACE,kBAAC,IAAD,CAAYmO,GAAIA,EAAIlO,UAAW,mBAC5BD,GCnBP,SAAS4Q,KACP,OACE,oCACE,kBAACN,GAAD,CAAc1I,MAAM,QAEpB,4FACA,qGACA,mLAIA,+OAKA,4FChBN,SAASiJ,KACP,OACE,oCACE,kBAACP,GAAD,CAAc1I,MAAM,SACpB,8IAEqB,6BAFrB,mDAKA,qCACA,wGAC6E,IAC3E,0BAAM3H,UAAU,mBAAhB,QAFF,iIAKA,wEAC4C,kBAAC0Q,GAAD,CAAMxC,GAAG,yBAAT,SAE5C,kDACA,yCACA,sLAE8D,IAC5D,0BAAMlO,UAAU,mBAAhB,aAHF,+NAQA,0EAC+C,IAC7C,kBAAC0Q,GAAD,CAAMxC,GAAG,6BAAT,SAEF,qCACA,8LAE2E,IACzE,0BAAMlO,UAAU,mBAAhB,QAHF,sGAMA,uEAC2C,kBAAC0Q,GAAD,CAAMxC,GAAG,yBAAT,SAE3C,qCACA,kKAE0C,0BAAMlO,UAAU,mBAAhB,SAF1C,kJAKE,6BALF,yGASA,yEAC6C,kBAAC0Q,GAAD,CAAMxC,GAAG,yBAAT,UCrD5C,SAAS7H,KACd,OACE,oCACE,kBAACgK,GAAD,CAAc1I,MAAM,wBACpB,mCACA,sFAC0D,kBAAC,GAAD,YAD1D,iFAE+D,6BAF/D,oBAGmB,kBAAC,GAAD,UAHnB,0DAGqF,IACnF,kBAAC,GAAD,qBAJF,OAI2B,kBAAC,GAAD,mBAE3B,sCACA,wMAEmF,IACjF,kBAAC,GAAD,oBAHF,wDAG2E,6BAH3E,gLAOA,oCACA,6JAEoC,6BAFpC,aAGY,kBAAC,GAAD,aAHZ,mBAGyC,kBAAC,GAAD,kBAHzC,wCAIS,6BAJT,+BAK8B,kBAAC,GAAD,oBAL9B,mBAKkE,kBAAC,GAAD,aALlE,OAKoF,IAClF,kBAAC,GAAD,cANF,wBAMsC,IACpC,uBAAGoE,KAAK,qDAAqD/L,UAAU,mBAAvE,SAEK,IATP,2HAYE,6BAZF,qBAaqB,KAErB,kBAACsQ,GAAD,KACG,CACChO,eAAgB,CACdK,OAAQ,OACRJ,IAAK,kBACLiD,KAAM,CACJnC,KAAM,MACNwN,UAAW,CAAC,CAAEjI,KAAM,mBAAoB9E,MAAO,kBAStD,SAASgN,KACd,OACE,oCACE,0EAC+C,IAC7C,kBAACJ,GAAD,CAAMxC,GAAG,kCAAT,kCCvDD,SAAS5F,KACd,IAAMR,EAAO,CACXxF,eAAgB,CAAEC,IAAK,aACvBM,SAAU,CAAE2C,KAAM,CAAEuL,IAAK,oBAAsB1N,KAAM,SAGvD,OACE,oCACE,kBAACgN,GAAD,CAAc1I,MAAM,UACpB,yHAC8F,IAD9F,8EAIA,oFACA,kBAAC2I,GAAD,KAAOxI,GAEP,kBAACgJ,GAAD,MAEA,kBAACE,GAAD,OAKN,SAASA,KACP,OACE,oCACE,mDACA,qEAEE,4BACE,4BACE,kBAACP,GAAD,mBADF,kBACoD,kBAACA,GAAD,aAEpD,4BACE,kBAACA,GAAD,aADF,kBAC8C,kBAACA,GAAD,0BAE9C,4BACE,kBAACA,GAAD,aADF,kBAC8C,kBAACA,GAAD,KAAa,OAE3D,4BACE,kBAACA,GAAD,cADF,kBAC+C,kBAACA,GAAD,UAD/C,8BAZJ,sBAmBA,kBAACH,GAAD,KACG,CACCxJ,WAAY,IACZzD,KAAM,mBACNmC,KAAM,CAAEuI,QAAS,4BAA6BkD,OAAQ,OACtDC,MAAO,MAGX,yHAC8F,IAC5F,kBAACT,GAAD,iBAFF,sECvDN,SAAS7G,KACP,IAAML,EAAO,CACXjH,eAAgB,CAAEC,IAAK,aACvBgH,KAAM,CAAEL,QAAS,WAAYE,aAAa,EAAMoE,KAAM,CAAC,CAAE2D,SAAU,IAAKC,KAAM,YAGhF,OACE,oCACE,kBAACf,GAAD,CAAc1I,MAAM,UACpB,2OAKA,oFACA,kBAAC2I,GAAD,KAAO/G,GAEP,kBAAC8H,GAAD,MAEA,kBAACC,GAAD,OAKN,SAASD,KACP,OACE,oCACE,gDACA,sFAC0D,kBAACZ,GAAD,YAD1D,gHAGY,6BAHZ,uCAIsC,kBAACA,GAAD,kBAJtC,qCAKiB,kBAACA,GAAD,YALjB,yCAKoF,IAClF,kBAACA,GAAD,sBANF,6EAaN,SAASa,KACP,OACE,oCACE,4CACA,qMAE+E,IAC7E,kBAACb,GAAD,WAHF,mCAG6D,kBAACA,GAAD,gBAC3D,6BAJF,oDAOA,kBAACH,GAAD,KACG,CACChO,eAAgB,CAAEC,IAAK,cACvBgH,KAAM,CACJiE,KAAM,CAAC,CAAExK,GAAI,IAAKuO,SAAU,MAAOH,KAAM,aAI/C,mEACuC,kBAACX,GAAD,gBADvC,4DAEsC,kBAACA,GAAD,uBAFtC,IAE8E,6BAF9E,mDAGkD,kBAACA,GAAD,iBAHlD,8DAMA,kBAACH,GAAD,KACG,CACChO,eAAgB,CAAEC,IAAK,cACvBgH,KAAM,CACJL,QAAS,WACTsE,KAAM,CAAC,CAAExK,GAAI,IAAKuO,SAAU,MAAOH,KAAM,aAI/C,+CACmB,kBAACX,GAAD,uBADnB,gEAE4B,kBAACA,GAAD,uBAF5B,KAIA,uCACW,kBAACA,GAAD,oBADX,yKC/EN,SAAS/F,KACP,IAAMR,EAAY,CAChB5H,eAAgB,CAAEC,IAAK,wBACvB4H,SAAU,CACR,CAAEqH,MAAO,CAAEJ,KAAM,SAAWvO,SAAU,CAAE2C,KAAM,CAAEiM,SAAU,sBAC1D,CAAED,MAAO,CAAEJ,KAAM,SAAWvO,SAAU,CAAE2C,KAAM,CAAEiM,SAAU,sBAC1D,CACED,MAAO,CAAEJ,KAAM,WACfvO,SAAU,CAAE2C,KAAM,CAAEiM,SAAU,2BAA6B3K,WAAY,OAG3E4K,QAAS,CACP7O,SAAU,CACR2C,KAAM,CAAEiM,SAAU,yCAA0CE,OAAQ,aACpE7K,WAAY,OAKlB,OACE,oCACE,kBAACuJ,GAAD,CAAc1I,MAAM,cACpB,8RAGoF,6BAHpF,6MAM0B,6BAN1B,yCASA,kBAAC2I,GAAD,KAAOpG,GAEP,kBAAC,GAAD,MAEA,kBAAC,GAAD,OAKN,SAASmH,KACP,OACE,oCACE,gDACA,gFACoD,kBAACZ,GAAD,YADpD,qIAG4B,kBAACA,GAAD,KAAa,MAHzC,4DAKE,6BALF,+BAM8B,kBAACA,GAAD,KAAa,4BAN3C,wBASA,kBAACD,GAAD,CAAaD,YAAa,GAA1B,IACG,6BACA,0EACD,6BACC,0EACD,6BALF,KAOA,0CACc,kBAACE,GAAD,KAAa,qBAD3B,mBAC6E,IAC3E,kBAACA,GAAD,YAFF,oBAE+C,kBAACA,GAAD,KAAa,qBAAkC,IAF9F,mBAGkB,kBAACA,GAAD,YAHlB,KAKA,kFACsD,kBAACA,GAAD,KAAa,aADnE,gEAE8D,IAC5D,kBAACA,GAAD,KAAa,8BAHf,cAGqE,IACnE,kBAACA,GAAD,YAJF,uBAImD,IACjD,kBAACA,GAAD,KAAa,8BALf,YAKmE,IACjE,kBAACA,GAAD,YANF,MAYN,SAASa,KACP,OACE,oCACE,oDACA,0EAC8C,kBAACb,GAAD,cAD9C,qPAIyC,6BAJzC,qCAKoC,kBAACA,GAAD,mBALpC,QAK6E,IAC3E,kBAACA,GAAD,aANF,KAMiC,6BANjC,0CAOyC,kBAACA,GAAD,mBAPzC,MAOgF,IAC9E,kBAACA,GAAD,aARF,mCAQgE,IAC9D,kBAACA,GAAD,yBATF,yDCjFN,SAAShF,KACP,IAAMV,EAAQ,CACZzI,eAAgB,CAAEC,IAAK,aACvBwI,MAAO,CAAEe,YAAa,CAAEvJ,IAAK,qBAG/B,OACE,oCACE,kBAAC8N,GAAD,CAAc1I,MAAM,UACpB,qUAIsB,6BAJtB,4IAMgD,6BANhD,0QASqF,6BATrF,iCAYA,kBAAC2I,GAAD,KAAOvF,GAEP,kBAAC,GAAD,MAEA,kBAAC,GAAD,OAKN,SAASsG,KACP,OACE,oCACE,gDACA,uFAC2D,kBAACZ,GAAD,YAD3D,iFAIA,sDAC0B,kBAACA,GAAD,eAD1B,kCACyF,IACvF,kBAACA,GAAD,YAFF,4CAQN,SAASa,KACP,OACE,oCACE,+CACA,uEAC2C,kBAACb,GAAD,oBAD3C,WACwF,IACtF,kBAACA,GAAD,YAFF,+GClDN,SAASmB,KACP,OACE,oCACE,kBAACvB,GAAD,CAAc1I,MAAM,WACpB,gDCEN,SAASkK,KACP,OACE,oCACE,kBAACxB,GAAD,CAAc1I,MAAM,qBACpB,uIAIA,iDACA,gbAOQ,6BAPR,yKAWA,uEACA,6bAKsD,6BALtD,2DAM2D,IACzD,kBAAC+I,GAAD,CAAMxC,GAAG,0BAAT,QAPF,KASA,+CACA,0NAGiB,kBAACuC,GAAD,sBAHjB,4JCrCN,SAASqB,KACP,OACE,oCACE,kBAACzB,GAAD,CAAc1I,MAAM,sBAEpB,+HAIA,4BACE,wHAGA,wIAIA,kM,MCPR,SAASoK,GAAT,GAAsC,IAAbhS,EAAY,EAAZA,SACvB,OACE,yBAAKC,UAAU,QACZD,EACD,yBAAKC,UAAU,eACb,yBAAKA,UAAU,UACb,kBAAC,GAAD,KACE,kBAAC2P,GAAD,CAAU9O,MAAM,aAAa+H,KAAM,oBACnC,kBAAC+G,GAAD,CAAU9O,MAAM,aAAa+H,KAAM,qBACnC,kBAAC+G,GAAD,CAAU9O,MAAM,gBAAgB+H,KAAM,oBACtC,kBAACiH,GAAD,CAAahP,MAAM,uBAAuB+H,KAAM,0BAChD,kBAACiH,GAAD,CAAahP,MAAM,uBAAuB+H,KAAM,0BAChD,kBAACiH,GAAD,CAAahP,MAAM,0BAA0B+H,KAAM,8BACnD,kBAACiH,GAAD,CAAahP,MAAM,wBAAwB+H,KAAM,0BACjD,kBAACiH,GAAD,CAAahP,MAAM,oBAAoB+H,KAAM,mCAC7C,kBAACiH,GAAD,CAAahP,MAAM,yBAAyB+H,KAAM,2BAElD,kBAAC+G,GAAD,CAAU9O,MAAM,OAAO+H,KAAM,uBAGjC,yBAAK5I,UAAU,gBACb,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAO4I,KAAM,kBAAmBoJ,UAAWrB,KAC3C,kBAAC,IAAD,CAAO/H,KAAM,mBAAoBoJ,UAAWpB,KAE5C,kBAAC,IAAD,CAAOhI,KAAM,yBAA0BoJ,UAAWJ,KAClD,kBAAC,IAAD,CAAOhJ,KAAM,iCAAkCoJ,UAAW3L,KAC1D,kBAAC,IAAD,CAAOuC,KAAM,wBAAyBoJ,UAAW1J,KACjD,kBAAC,IAAD,CAAOM,KAAM,wBAAyBoJ,UAAWpI,KACjD,kBAAC,IAAD,CAAOhB,KAAM,4BAA6BoJ,UAAWtH,KACrD,kBAAC,IAAD,CAAO9B,KAAM,wBAAyBoJ,UAAWvG,KACjD,kBAAC,IAAD,CAAO7C,KAAM,kBAAmBoJ,UAAWH,KAE3C,kBAAC,IAAD,CAAOjJ,KAAM,mBAAoBoJ,UAAWF,KAC5C,kBAAC,IAAD,CAAU5D,GAAI,wB,YCrCX,SAAS+D,KACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrJ,KAAK,eACV,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,oDACA,kBAAC,IAAD,CAAMsF,GAAG,SAASlO,UAAU,qBAA5B,oBAMN,kBAAC,IAAD,CAAO4I,KAAK,UACV,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,iDACA,kBAAC,IAAD,CAAMsF,GAAG,cAAclO,UAAU,cAAjC,kBAMN,kBAAC,IAAD,CAAUkO,GAAG,aC9BrBgE,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6519f5bc.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.scss';\n\nexport function Header({ children }) {\n  return <div className=\"header\">{children}</div>;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport './Panel.scss';\n\nexport function Panel({ itemsLifecycle, presentation, children }) {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [items, setItems] = useState([]);\n\n  const { fetch, clear } = itemsLifecycle;\n  const { label, icon, className } = presentation;\n\n  useEffect(() => {\n    if (!location.pathname.includes('/edit') && !location.pathname.includes('/new')) {\n      fetch(setItems);\n    }\n  }, [fetch, setItems, location]);\n\n  const createNew = () => {\n    history.push(`/stub4/${label}/new`.toLowerCase());\n  };\n\n  const onClear = async () => {\n    await clear();\n    await fetch(setItems);\n  };\n\n  return (\n    <div className=\"panel\">\n      <h1>\n        {label}\n        <i className=\"material-icons\">{icon}</i>\n        <button className=\"createBtn\" onClick={createNew}>\n          <i className=\"material-icons\">add_box</i>Create\n        </button>\n        <button className=\"clearBtn\" onClick={onClear}>\n          <i className=\"material-icons\">clear_all</i>Clear\n        </button>\n      </h1>\n      <div className={className}>{children.list(items)}</div>\n    </div>\n  );\n}\n","import _ from 'lodash';\nimport React from 'react';\n\nimport './Lists.scss';\n\n// TODO: rename setSelected to onSelected\nexport default function ItemsList({ items, setSelected, styles, itemKey, children }) {\n  const className = (item) => (!item.enabled ? `${styles.itemClass} disabled` : styles.itemClass);\n\n  return (\n    <div className={styles.listClass}>\n      {_.isEmpty(items) && <p className=\"noResultsMsg\">None created yet</p>}\n      {items.map((item) => (\n        <div key={itemKey(item)} className={className(item)} onClick={() => setSelected(item)}>\n          {children.item(item)}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport ItemsList from '../prototypes/stubsComponents/ItemsList';\n\nexport function StubsList({ items, selected, setSelected }) {\n  return (\n    <ItemsList\n      items={items}\n      selected={selected}\n      setSelected={setSelected}\n      styles={{ itemClass: 'stub', listClass: 'stubsList' }}\n      itemKey={(item) => `${item.requestMatcher.url}-item`}\n      selectionMatch={(selected, current) =>\n        selected.requestMatcher.url === current.requestMatcher.url\n      }\n    >\n      {{\n        item: (item) => <StubListItem item={item} />\n      }}\n    </ItemsList>\n  );\n}\n\nfunction StubListItem({ item }) {\n  const methodClassName = (method) =>\n    method === '*' || method === undefined ? 'any' : method.toLowerCase();\n\n  return (\n    <p>\n      <span className={`method ${methodClassName(item.requestMatcher.method)}`}>\n        {item.requestMatcher.method}\n      </span>{' '}\n      <span className=\"url\">{item.requestMatcher.url}</span>\n      <span>→</span>\n      <span className=\"contentType\">{item.response.contentType}</span>\n    </p>\n  );\n}\n","import React from 'react';\n\nimport './EnableDisableButton.scss';\n\nexport function EnableDisableButton({ id, enabled, setEnabled, toggleFunction }) {\n  if (id === undefined) return null;\n\n  async function toggle() {\n    const { nowEnabled } = await toggleFunction({ id }, !enabled);\n    setEnabled(nowEnabled);\n  }\n\n  return (\n    <>\n      <label className=\"enableDisable\" htmlFor=\"enableDisable\">\n        Enabled\n      </label>\n      <input id=\"enableDisable\" type=\"checkbox\" checked={enabled} onChange={toggle} />\n    </>\n  );\n}\n","import React from 'react';\n\nexport function UrlMatcher({ urlMatcher, onChange, label = 'URL', focus = true }) {\n  function handleWithLeadingSlash(event) {\n    const text = event.target.value[0] !== '/' ? `/${event.target.value}` : event.target.value;\n    onChange(text);\n  }\n\n  return (\n    <div>\n      <label className=\"itemLabel\" htmlFor=\"url\">\n        {label}\n      </label>\n      <input\n        id=\"url\"\n        type=\"text\"\n        onChange={handleWithLeadingSlash}\n        value={urlMatcher}\n        autoFocus={focus}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport function HeadersMatcher({ headersMatcher, onChange }) {\n  const [headersMatcherDefined, setHeadersMatcherDefined] = useState(\n    headersMatcher !== undefined && headersMatcher !== {}\n  );\n  const [adding, setAdding] = useState(false);\n\n  useEffect(() => {\n    if (!adding && empty(headersMatcher)) {\n      setHeadersMatcherDefined(false);\n    }\n  }, [adding, headersMatcher, setHeadersMatcherDefined]);\n\n  return (\n    <>\n      <label className=\"itemLabel\" htmlFor=\"headersMatcher\">\n        HEADERS MATCHER\n      </label>\n      <input\n        id=\"headersMatcher\"\n        type=\"checkbox\"\n        checked={headersMatcherDefined}\n        onChange={(event) => {\n          setAdding(event.target.checked);\n          setHeadersMatcherDefined(event.target.checked);\n        }}\n      />\n\n      {headersMatcherDefined && (\n        <>\n          <ExistingHeaders\n            headersMatcher={headersMatcher}\n            setHeadersMatcherDefined={setHeadersMatcherDefined}\n            onChange={onChange}\n          />\n          <NewHeader\n            headersMatcher={headersMatcher}\n            adding={adding}\n            setAdding={setAdding}\n            onChange={onChange}\n          />\n          <button id=\"headersMatcher\" onClick={() => setAdding(true)}>\n            Add\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n\nfunction ExistingHeaders({ headersMatcher, setHeadersMatcherDefined, onChange }) {\n  const keys = headersMatcher !== undefined ? Object.keys(headersMatcher) : [];\n  return keys.map((key, index) => (\n    <div key={`${key}-${index}`}>\n      <label>\n        Name\n        <input type=\"text\" value={key} disabled />\n      </label>\n      <label>\n        Value\n        <input type=\"text\" value={headersMatcher[key]} disabled />\n      </label>\n      <button\n        id=\"removeButton\"\n        onClick={() => {\n          const copy = headersMatcher;\n          delete copy[key];\n          if (empty(copy)) {\n            setHeadersMatcherDefined(false);\n          }\n          onChange(copy);\n        }}\n      >\n        Remove\n      </button>\n    </div>\n  ));\n}\n\nfunction NewHeader({ headersMatcher, onChange, adding, setAdding }) {\n  const [newKey, setNewKey] = useState('');\n  const [newValue, setNewValue] = useState('');\n\n  if (!adding) return null;\n\n  return (\n    <div>\n      <label>\n        Name\n        <input type=\"text\" onChange={(event) => setNewKey(event.target.value)} value={newKey} />\n      </label>\n      <label htmlFor=\"newValue\">Value</label>\n      <input\n        id=\"newValue\"\n        type=\"text\"\n        onChange={(event) => setNewValue(event.target.value)}\n        value={newValue}\n      />\n      <button\n        id=\"confirmButton\"\n        onClick={() => {\n          onChange({ ...headersMatcher, [newKey]: newValue });\n          setAdding(false);\n          setNewKey('');\n          setNewValue('');\n        }}\n      >\n        Confirm\n      </button>\n      <button id=\"cancelButton\" onClick={() => setAdding(false)}>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nfunction empty(item) {\n  return item === undefined || Object.keys(item).length === 0;\n}\n","import React, { useState, useEffect } from 'react';\n\nexport function BodyMatcher({ bodyMatcher, onChange }) {\n  const [bodyMatcherDefined, setBodyMatcherDefined] = useState(!empty(bodyMatcher));\n\n  useEffect(() => {\n    setBodyMatcherDefined(!empty(bodyMatcher));\n  }, [bodyMatcher, setBodyMatcherDefined]);\n\n  return (\n    <>\n      <label className=\"itemLabel\" htmlFor=\"bodyMatcher\">\n        BODY MATCHER\n      </label>\n      <input\n        id=\"bodyMatcher\"\n        type=\"checkbox\"\n        checked={bodyMatcherDefined}\n        onChange={(event) => {\n          setBodyMatcherDefined(event.target.checked);\n          onChange(\n            event.target.checked\n              ? {\n                  type: 'json',\n                  value: ''\n                }\n              : undefined\n          );\n        }}\n      />\n      {bodyMatcherDefined && <BodyMatcherDetails bodyMatcher={bodyMatcher} onChange={onChange} />}\n    </>\n  );\n}\n\nfunction BodyMatcherDetails({ bodyMatcher, onChange }) {\n  return (\n    <div>\n      <div>\n        <label className=\"itemLabel\" htmlFor=\"bodyType\">\n          TYPE\n        </label>\n        <select\n          id=\"bodyType\"\n          value={bodyMatcher?.type}\n          onChange={(event) => {\n            onChange({\n              ...bodyMatcher,\n              type: event.target.value\n            });\n          }}\n        >\n          <option value=\"json\">JSON</option>\n          <option value=\"xml\">XML</option>\n        </select>\n      </div>\n\n      <div>\n        <label className=\"itemLabel\" htmlFor=\"bodyMatch\">\n          MATCH\n        </label>\n        <textarea\n          id=\"bodyMatch\"\n          value={toStringIfObject(bodyMatcher?.value)}\n          onChange={(event) =>\n            onChange({\n              ...bodyMatcher,\n              value: toJsonIfObject(event.target.value)\n            })\n          }\n          rows=\"5\"\n          cols=\"33\"\n          className=\"bodyMatch\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction empty(item) {\n  return item === undefined || Object.keys(item).length === 0;\n}\n\nfunction toStringIfObject(body) {\n  return typeof body === 'object' ? JSON.stringify(body) : body;\n}\n\nfunction toJsonIfObject(body) {\n  try {\n    return JSON.parse(body);\n  } catch (e) {\n    return body;\n  }\n}\n","import React, { useState, useEffect } from 'react';\n\nexport function MethodMatcher({ methodMatcher, onChange }) {\n  const [methodMatcherDefined, setMethodMatcherDefined] = useState(methodMatcher !== undefined);\n\n  useEffect(() => {\n    setMethodMatcherDefined(methodMatcher !== undefined);\n  }, [methodMatcher, setMethodMatcherDefined]);\n\n  return (\n    <>\n      <label className=\"itemLabel\" htmlFor=\"methodMatcher\">\n        METHOD MATCHER\n      </label>\n      <input\n        id=\"methodMatcher\"\n        type=\"checkbox\"\n        checked={methodMatcherDefined}\n        onChange={(event) => onChange(event.target.checked ? 'GET' : undefined)}\n      />\n      {methodMatcherDefined && Methods(methodMatcher, onChange)}\n    </>\n  );\n}\n\nfunction Methods(methodMatcher, onChange) {\n  return (\n    <>\n      <label className=\"itemLabel\" htmlFor=\"method\">\n        METHOD\n      </label>\n      <select id=\"method\" value={methodMatcher} onChange={(event) => onChange(event.target.value)}>\n        <option value=\"GET\">GET</option>\n        <option value=\"POST\">POST</option>\n        <option value=\"PATCH\">PATCH</option>\n        <option value=\"DELETE\">DELETE</option>\n        <option value=\"*\">* (Any)</option>\n      </select>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { UrlMatcher } from './UrlMatcher';\nimport { HeadersMatcher } from './HeadersMatcher';\nimport { BodyMatcher } from './BodyMatcher';\nimport { MethodMatcher } from './MethodMatcher';\n\nimport './RequestMatcher.scss';\n\nexport function RequestMatcher({ requestMatcher, setRequestMatcher }) {\n  return (\n    <div className=\"requestMatching\">\n      <label htmlFor=\"requestDefinition\">Request Matching</label>\n      <fieldset id=\"requestDefinition\" className=\"requestDefinition\">\n        <div>\n          <UrlMatcher\n            urlMatcher={requestMatcher.url}\n            onChange={(url) => setRequestMatcher({ ...requestMatcher, url })}\n          />\n        </div>\n        <div>\n          <MethodMatcher\n            methodMatcher={requestMatcher.method}\n            onChange={(method) => setRequestMatcher({ ...requestMatcher, method })}\n          />\n        </div>\n        <div>\n          <HeadersMatcher\n            headersMatcher={requestMatcher.headers}\n            onChange={(headers) => setRequestMatcher({ ...requestMatcher, headers })}\n          />\n        </div>\n        <div>\n          <BodyMatcher\n            bodyMatcher={requestMatcher.body}\n            onChange={(body) => setRequestMatcher({ ...requestMatcher, body })}\n          />\n        </div>\n      </fieldset>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function SaveButton({ onSave }) {\n  return (\n    <div className=\"buttonGroup\">\n      <button className=\"saveButton\" onClick={onSave}>\n        <i className=\"material-icons\">playlist_add</i>Save\n      </button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { EnableDisableButton } from '../prototypes/stubsComponents/EnableDisableButton';\nimport { RequestMatcher } from '../prototypes/matching/RequestMatcher';\nimport { SaveButton } from '../prototypes/stubsComponents/SaveButton';\n\nconst { stubFor, stubs } = require('@stub4/client');\n\nconst defaults = {\n  requestMatcher: { url: '' },\n  response: {\n    statusCode: 200,\n    body: '{}',\n    type: 'application/json'\n  }\n};\n\nexport function StubEditor({ onClose, onSaved, editedItem }) {\n  const id = editedItem?.id;\n  const [enabled, setEnabled] = useState(editedItem?.enabled ?? true);\n  const [requestMatcher, setRequestMatcher] = useState({\n    ...defaults.requestMatcher,\n    ...editedItem?.requestMatcher\n  });\n  const [response, setResponse] = useState({\n    ...defaults.response,\n    ...editedItem?.response\n  });\n\n  async function onSave() {\n    await stubFor({ id, requestMatcher, response });\n    onSaved();\n  }\n\n  return (\n    <form\n      onKeyDown={(e) => e.keyCode === 27 && onClose()}\n      className={!enabled ? 'disabledEditor' : ''}\n      onSubmit={(event) => {\n        event.preventDefault();\n        onSave();\n      }}\n    >\n      <EnableDisableButton\n        id={editedItem?.id}\n        enabled={enabled}\n        setEnabled={setEnabled}\n        toggleFunction={stubs.setEnabled}\n      />\n\n      <fieldset className=\"editorFieldset\" disabled={!enabled}>\n        <RequestMatcher requestMatcher={requestMatcher} setRequestMatcher={setRequestMatcher} />\n\n        <br />\n        <label htmlFor=\"responseDefinition\">Response: </label>\n        <fieldset id=\"responseDefinition\" className=\"responseDefinition\">\n          <div>\n            <label className=\"itemLabel\" htmlFor=\"status\">\n              STATUS\n            </label>\n            <input\n              id=\"status\"\n              type=\"text\"\n              onChange={(event) => setResponse({ ...response, statusCode: event.target.value })}\n              value={response.statusCode}\n            />\n          </div>\n\n          <div>\n            <label className=\"itemLabel\" htmlFor=\"type\">\n              TYPE\n            </label>\n            <select\n              id=\"type\"\n              value={response.type}\n              onChange={(event) => setResponse({ ...response, type: event.target.value })}\n            >\n              <option value=\"text/plain\">text/plain</option>\n              <option value=\"application/json\">application/json</option>\n              <option value=\"application/xml\">application/xml</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"itemLabel\" htmlFor=\"body\">\n              BODY\n            </label>\n            <textarea\n              id=\"body\"\n              className=\"responseBody\"\n              onChange={(event) => setResponse({ ...response, body: event.target.value })}\n              rows=\"5\"\n              cols=\"33\"\n              value={toStringIfObject(response.body)}\n            />\n          </div>\n        </fieldset>\n        <SaveButton onSave={onSave} />\n\n        {/* TODO: add delete */}\n      </fieldset>\n    </form>\n  );\n}\n\nfunction toStringIfObject(body) {\n  return typeof body === 'object' ? JSON.stringify(body) : body;\n}\n","import React from 'react';\n\nimport './Editor.scss';\n\nexport function NewItemModal(props) {\n  return <Modal title={`Create new ${props.itemName}`} {...props} />;\n}\n\nexport function ItemModal(props) {\n  return <Modal title={`A ${props.itemName}`} {...props} />;\n}\n\nfunction Modal({ title, onClose, children }) {\n  return (\n    <>\n      <div className=\"new\" onKeyDown={(e) => e.keyCode === 27 && onClose()}>\n        <h1 className=\"newItemTitle\">\n          {title}\n          <button className=\"closeButton\" onClick={onClose}>\n            <i className=\"material-icons\">clear</i>Close\n          </button>\n        </h1>\n        <div className=\"newItemContents\">{children}</div>\n      </div>\n      <div className=\"modalBackgroundOverlay\" />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\nimport { stubs } from '@stub4/client';\n\nimport { StubEditor } from './StubEditor';\nimport { ItemModal } from '../prototypes/stubsComponents/ItemModal';\n\nexport function EditStub() {\n  const [stub, setStub] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getStub() {\n      try {\n        const stub = await stubs.getById(id);\n        setStub(stub);\n      } catch (e) {\n        setStub('NOT_FOUND');\n      }\n    }\n    getStub();\n  }, [id]);\n\n  const close = () => history.push(location.pathname.replace(`/edit/${id}`, ''));\n\n  function getStub(stub) {\n    switch (stub) {\n      case null:\n        return <p>Just a second...</p>;\n      case 'NOT_FOUND':\n        return <p>Stub not found with id '{id}'</p>;\n      default:\n        return <StubEditor onClose={close} onSaved={close} editedItem={stub} />;\n    }\n  }\n\n  return (\n    <ItemModal itemName={'Stub'} onClose={close}>\n      {getStub(stub)}\n    </ItemModal>\n  );\n}\n\nexport function NewStub() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const close = () => history.push(history.push(location.pathname.replace(`/new`, '')));\n\n  return (\n    <ItemModal itemName={'Stub'} onClose={close}>\n      <StubEditor onClose={close} onSaved={close} editedItem={null} />\n    </ItemModal>\n  );\n}\n","import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport { Panel } from '../prototypes/stubsComponents/Panel';\nimport { StubsList } from './StubsList';\nimport { EditStub, NewStub } from './Stub';\nimport './Stub.scss';\n\nexport function Stubs({ client }) {\n  const history = useHistory();\n  // TODO: last place to remove the client!\n  const fetch = async (set) => await client.fetchStubs(set);\n  const clear = async () => await client.clearStubs();\n\n  const onSelect = (item) => history.push(`/stub4/stubs/edit/${item.id}`);\n\n  return (\n    <>\n      <Route path=\"/stub4/stubs/edit/:id\">\n        <EditStub />\n      </Route>\n      <Route path=\"/stub4/stubs/new\">\n        <NewStub />\n      </Route>\n      <Route>\n        <Panel\n          itemsLifecycle={{ fetch, clear }}\n          presentation={{ label: 'Stubs', icon: 'import_export', className: 'stubs' }}\n          pathBased={true}\n        >\n          {{\n            list: (items, _) => <StubsList items={items} selected={null} setSelected={onSelect} />,\n            preview: (_) => <></>,\n            create: (_) => <></>\n          }}\n        </Panel>\n      </Route>\n    </>\n  );\n}\n","import React from 'react';\n\nimport ItemsList from '../prototypes/stubsComponents/ItemsList';\n\nexport function CrudsList({ items, selected, setSelected }) {\n  return (\n    <ItemsList\n      items={items}\n      selected={selected}\n      setSelected={setSelected}\n      styles={{ itemClass: 'crudDef', listClass: 'crudsList' }}\n      itemKey={(item) => `${item.url}-item`}\n      selectionMatch={(selected, current) => selected.url === current.url}\n    >\n      {{\n        item: (item) => <CrudListItem item={item} />\n      }}\n    </ItemsList>\n  );\n}\n\nfunction CrudListItem({ item }) {\n  return (\n    <p>\n      <span className=\"url\">{item.url}</span>\n      <span>→</span>\n      <span className=\"id\">{item.idAlias}</span>\n    </p>\n  );\n}\n","import React, { useState } from 'react';\nimport { EnableDisableButton } from '../prototypes/stubsComponents/EnableDisableButton';\nimport { SaveButton } from '../prototypes/stubsComponents/SaveButton';\nimport { UrlMatcher } from '../prototypes/matching/UrlMatcher';\n\nconst { stubFor, cruds } = require('@stub4/client');\n\nconst defaults = {\n  requestMatcher: { url: '' },\n  crud: { idAlias: '', patchOnPost: false, items: [] }\n};\nexport function CrudEditor({ onClose, onSaved, editedItem }) {\n  const id = editedItem?.id;\n  const [enabled, setEnabled] = useState(editedItem?.enabled ?? true);\n  const [urlMatcher, setUrlMatcher] = useState({\n    ...defaults.requestMatcher,\n    ...editedItem?.requestMatcher\n  });\n\n  const [crud, setCrud] = useState({\n    ...defaults.crud,\n    ...editedItem?.crud\n  });\n\n  async function onSave() {\n    await stubFor({ id, requestMatcher: { url: urlMatcher.url }, crud });\n    onSaved();\n  }\n\n  return (\n    <form\n      onKeyDown={(e) => e.keyCode === 27 && onClose()}\n      className={!enabled ? 'disabledEditor' : ''}\n      onSubmit={(event) => {\n        event.preventDefault();\n        onSave();\n      }}\n    >\n      <EnableDisableButton\n        id={editedItem?.id}\n        enabled={enabled}\n        setEnabled={setEnabled}\n        toggleFunction={cruds.setEnabled}\n      />\n\n      <fieldset className=\"editorFieldset\" disabled={!enabled}>\n        <UrlMatcher urlMatcher={urlMatcher.url} onChange={(url) => setUrlMatcher({ url })} />\n\n        <div>\n          <label className=\"itemLabel\" htmlFor=\"idAlias\">\n            ID ALIAS\n          </label>\n          <input\n            id=\"idAlias\"\n            type=\"text\"\n            onChange={(event) => setCrud({ ...crud, idAlias: event.target.value })}\n            value={crud.idAlias}\n          />\n        </div>\n\n        <label className=\"itemLabel\" htmlFor=\"patchOnPostCheckbox\">\n          PATCH ON POST\n        </label>\n        <input\n          id=\"patchOnPostCheckbox\"\n          type=\"checkbox\"\n          className=\"bodyMatchCheckbox\"\n          onChange={(event) => setCrud({ ...crud, patchOnPost: event.target.checked })}\n          checked={crud.patchOnPost}\n        />\n\n        <div>\n          <label className=\"itemLabel\" htmlFor=\"contents\">\n            Contents\n          </label>\n          <textarea\n            id=\"contents\"\n            value={toStringIfObject(crud?.items)}\n            onChange={(event) =>\n              setCrud({\n                ...crud,\n                items: toJsonIfObject(event.target.value)\n              })\n            }\n            rows=\"35\"\n            cols=\"33\"\n            className=\"contents\"\n          />\n        </div>\n        <SaveButton onSave={onSave} />\n      </fieldset>\n    </form>\n  );\n}\n\nfunction toStringIfObject(body) {\n  return typeof body === 'object' ? JSON.stringify(body, null, 2) : body;\n}\n\nfunction toJsonIfObject(body) {\n  try {\n    return JSON.parse(body);\n  } catch (e) {\n    return body;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\nimport { cruds } from '@stub4/client';\n\nimport { CrudEditor } from './CrudEditor';\nimport { ItemModal } from '../prototypes/stubsComponents/ItemModal';\n\nexport function EditCrud() {\n  const [crud, setCrud] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getCrud() {\n      try {\n        const crud = await cruds.getById(id);\n        setCrud(crud);\n      } catch (e) {\n        setCrud('NOT_FOUND');\n      }\n    }\n    getCrud();\n  }, [id]);\n\n  const close = () => history.push(location.pathname.replace(`/edit/${id}`, ''));\n\n  function getCrud(crud) {\n    switch (crud) {\n      case null:\n        return <p>Just a second...</p>;\n      case 'NOT_FOUND':\n        return <p>Crud not found with id '{id}'</p>;\n      default:\n        return <CrudEditor onClose={close} onSaved={close} editedItem={crud} />;\n    }\n  }\n\n  return (\n    <ItemModal itemName={'Crud'} onClose={close}>\n      {getCrud(crud)}\n    </ItemModal>\n  );\n}\n\nexport function NewCrud() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const close = () => history.push(history.push(location.pathname.replace(`/new`, '')));\n\n  return (\n    <ItemModal itemName={'Crud'} onClose={close}>\n      <CrudEditor onClose={close} onSaved={close} editedItem={null} />\n    </ItemModal>\n  );\n}\n","import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport { Panel } from '../prototypes/stubsComponents/Panel';\nimport { CrudsList } from './CrudsList';\nimport { EditCrud, NewCrud } from './Crud';\n// import './Crud.scss'; // TODO: mmh, is this better? Probably right?\n\nexport function Cruds({ client }) {\n  const history = useHistory();\n  // TODO: last place to remove the client!\n  const fetch = async (set) => await client.fetchCruds(set);\n  const clear = async () => await client.clearCruds();\n\n  const onSelect = (item) => history.push(`/stub4/cruds/edit/${item.id}`);\n\n  return (\n    <>\n      <Route path=\"/stub4/cruds/edit/:id\">\n        <EditCrud />\n      </Route>\n      <Route path=\"/stub4/cruds/new\">\n        <NewCrud />\n      </Route>\n      <Route>\n        <Panel\n          itemsLifecycle={{ fetch, clear }}\n          presentation={{ label: 'Cruds', icon: 'import_export', className: 'cruds' }}\n          pathBased={true}\n        >\n          {{\n            list: (items, _) => <CrudsList items={items} selected={null} setSelected={onSelect} />,\n            preview: (_) => <></>,\n            create: (_) => <></>\n          }}\n        </Panel>\n      </Route>\n    </>\n  );\n}\n","import React from 'react';\n\nimport ItemsList from '../prototypes/stubsComponents/ItemsList';\n\nexport function ScenariosList({ items, selected, setSelected }) {\n  return (\n    <ItemsList\n      items={items}\n      selected={selected}\n      setSelected={setSelected}\n      styles={{ itemClass: 'scenario', listClass: 'scenariosList' }}\n      itemKey={(item) => `${item.requestMatcher.url}-item`}\n      selectionMatch={(selected, current) =>\n        selected.requestMatcher.url === current.requestMatcher.url\n      }\n    >\n      {{\n        item: (item) => <ScenarioListItem item={item} />\n      }}\n    </ItemsList>\n  );\n}\n\nfunction ScenarioListItem({ item }) {\n  return (\n    <p>\n      <span className=\"url\">{item.requestMatcher.url}</span>\n      <span className=\"variableNames\">{item.requestMatcher?.urlMatcher?.variableNames}</span>\n      <span>→</span>\n      <span className=\"outcomesLength\">\n        {item.scenarios.outcomes.length} outcome{item.scenarios.outcomes.length > 1 ? 's' : ''}\n      </span>\n    </p>\n  );\n}\n","import React, { useState } from 'react';\nimport { RequestMatcher } from '../prototypes/matching/RequestMatcher';\nimport { EnableDisableButton } from '../prototypes/stubsComponents/EnableDisableButton';\n\nconst { scenarios } = require('@stub4/client');\n\nconst defaults = {\n  requestMatcher: { url: '' }\n};\n\nexport function ScenarioEditor({ onClose, editedItem }) {\n  const id = editedItem?.id;\n  const [enabled, setEnabled] = useState(editedItem?.enabled ?? true);\n  const [requestMatcher, setRequestMatcher] = useState({\n    ...defaults.requestMatcher,\n    ...editedItem?.requestMatcher\n  });\n\n  async function onSave() {}\n\n  return (\n    <form\n      onKeyDown={(e) => e.keyCode === 27 && onClose()}\n      className={!enabled ? 'disabledEditor' : ''}\n      onSubmit={(event) => {\n        event.preventDefault();\n        onSave();\n      }}\n    >\n      <EnableDisableButton\n        id={id}\n        enabled={enabled}\n        setEnabled={setEnabled}\n        toggleFunction={scenarios.setEnabled}\n      />\n      <fieldset className=\"editorFieldset\" disabled={!enabled}>\n        <RequestMatcher requestMatcher={requestMatcher} setRequestMatcher={setRequestMatcher} />\n\n        <br />\n\n        <p>Bear with... work in progress.. but here's the definition?</p>\n\n        <textarea rows={30} cols={60} value={JSON.stringify(editedItem?.scenarios, null, 2)} />\n\n        {/* <SaveButton onSave={onSave} /> */}\n        {/* TODO: add delete */}\n      </fieldset>\n    </form>\n  );\n}\n\n// function toStringIfObject(body) {\n//   return typeof body === 'object' ? JSON.stringify(body) : body;\n// }\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\nimport { scenarios } from '@stub4/client';\n\nimport { ScenarioEditor } from './ScenarioEditor';\nimport { ItemModal } from '../prototypes/stubsComponents/ItemModal';\n\nexport function EditScenario() {\n  const [scenario, setScenario] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getScenario() {\n      try {\n        const scenario = await scenarios.getById(id);\n        setScenario(scenario);\n      } catch (e) {\n        setScenario('NOT_FOUND');\n      }\n    }\n    getScenario();\n  }, [id]);\n\n  const close = () => history.push(location.pathname.replace(`/edit/${id}`, ''));\n\n  function getScenario(scenario) {\n    switch (scenario) {\n      case null:\n        return <p>Just a second...</p>;\n      case 'NOT_FOUND':\n        return <p>Scenario not found with id '{id}'</p>;\n      default:\n        return <ScenarioEditor onClose={close} onSaved={close} editedItem={scenario} />;\n    }\n  }\n\n  return (\n    <ItemModal itemName={'Scenario'} onClose={close}>\n      {getScenario(scenario)}\n    </ItemModal>\n  );\n}\n\nexport function NewScenario() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const close = () => history.push(history.push(location.pathname.replace(`/new`, '')));\n\n  return (\n    <ItemModal itemName={'Scenario'} onClose={close}>\n      <ScenarioEditor onClose={close} onSaved={close} editedItem={null} />\n    </ItemModal>\n  );\n}\n","import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport { Panel } from '../prototypes/stubsComponents/Panel';\nimport { ScenariosList } from './ScenariosList';\nimport { EditScenario, NewScenario } from './Scenario';\nimport './Scenarios.scss';\n\nexport function Scenarios({ client }) {\n  const history = useHistory();\n  // TODO: last place to remove the client!\n  const fetch = async (set) => await client.fetchScenarios(set);\n  const clear = async () => await client.clearScenarios();\n\n  const onSelect = (item) => history.push(`/stub4/scenarios/edit/${item.id}`);\n\n  return (\n    <>\n      <Route path=\"/stub4/scenarios/edit/:id\">\n        <EditScenario />\n      </Route>\n      <Route path=\"/stub4/scenarios/new\">\n        <NewScenario />\n      </Route>\n      <Route>\n        <Panel\n          itemsLifecycle={{ fetch, clear }}\n          presentation={{ label: 'Scenarios', icon: 'import_export', className: 'scenarios' }}\n          pathBased={true}\n        >\n          {{\n            list: (items, _) => (\n              <ScenariosList items={items} selected={null} setSelected={onSelect} />\n            ),\n            preview: (_) => <></>,\n            create: (_) => <></>\n          }}\n        </Panel>\n      </Route>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { EnableDisableButton } from '../prototypes/stubsComponents/EnableDisableButton';\nimport { SaveButton } from '../prototypes/stubsComponents/SaveButton';\nimport { RequestMatcher } from '../prototypes/matching/RequestMatcher';\n\nimport { stubFor, proxy as proxys } from '@stub4/client';\n\nconst defaults = {\n  requestMatcher: { url: '' },\n  proxy: { destinationUrl: '' }\n};\nexport function ProxyEditor({ onClose, onSaved, editedItem }) {\n  const id = editedItem?.id;\n  const [enabled, setEnabled] = useState(editedItem?.enabled ?? true);\n  const [requestMatcher, setRequestMatcher] = useState({\n    ...defaults.requestMatcher,\n    ...editedItem?.requestMatcher\n  });\n  const [proxy, setProxyDef] = useState({\n    ...defaults.proxy,\n    ...editedItem?.proxy\n  });\n\n  async function onSave() {\n    await stubFor({ id, requestMatcher, proxy });\n    onSaved();\n  }\n\n  return (\n    <form\n      onKeyDown={(e) => e.keyCode === 27 && onClose()}\n      className={!enabled ? 'disabledEditor' : ''}\n      onSubmit={(event) => {\n        event.preventDefault();\n        onSave();\n      }}\n    >\n      <EnableDisableButton\n        id={editedItem?.id}\n        enabled={enabled}\n        setEnabled={setEnabled}\n        toggleFunction={proxys.setEnabled}\n      />\n\n      <fieldset className=\"editorFieldset\" disabled={!enabled}>\n        <RequestMatcher requestMatcher={requestMatcher} setRequestMatcher={setRequestMatcher} />\n\n        <div>\n          <h3>Proxy to</h3>\n          <label className=\"itemLabel\" htmlFor=\"destinationUrl\">\n            PROXY URL\n          </label>\n          <input\n            id=\"destinationUrl\"\n            type=\"text\"\n            onChange={(event) => setProxyDef({ ...proxy, destinationUrl: event.target.value })}\n            value={proxy.destinationUrl}\n          />\n        </div>\n\n        <SaveButton onSave={onSave} />\n      </fieldset>\n    </form>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\nimport { ItemModal } from '../prototypes/stubsComponents/ItemModal';\n\nimport { ProxyEditor } from './ProxyEditor';\nimport { proxy as allProxy } from '@stub4/client';\n\nexport function EditProxy() {\n  const [proxy, setProxy] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getProxy() {\n      try {\n        const proxy = await allProxy.getById(id);\n        setProxy(proxy);\n      } catch (e) {\n        setProxy('NOT_FOUND');\n      }\n    }\n    getProxy();\n  }, [id]);\n\n  const close = () => history.push(location.pathname.replace(`/edit/${id}`, ''));\n\n  function getProxy(proxy) {\n    switch (proxy) {\n      case null:\n        return <p>Just a second...</p>;\n      case 'NOT_FOUND':\n        return <p>Proxy not found with id '{id}'</p>;\n      default:\n        return <ProxyEditor onClose={close} onSaved={close} editedItem={proxy} />;\n    }\n  }\n\n  return (\n    <ItemModal itemName={'Proxy'} onClose={close}>\n      {getProxy(proxy)}\n    </ItemModal>\n  );\n}\n\nexport function NewProxy() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const close = () => history.push(history.push(location.pathname.replace(`/new`, '')));\n\n  return (\n    <ItemModal itemName={'Proxy'} onClose={close}>\n      <ProxyEditor onClose={close} onSaved={close} editedItem={null} />\n    </ItemModal>\n  );\n}\n","import React from 'react';\n\nimport ItemsList from '../prototypes/stubsComponents/ItemsList';\n\nexport function ProxyList({ items, selected, setSelected }) {\n  return (\n    <ItemsList\n      items={items}\n      selected={selected}\n      setSelected={setSelected}\n      styles={{ itemClass: 'proxyDef', listClass: 'proxyList' }}\n      itemKey={(item) => `${item.requestMatcher.url}-item`}\n      selectionMatch={(selected, current) =>\n        selected.requestMatcher.url === current.requestMatcher.url\n      }\n    >\n      {{\n        item: (item) => <ProxyListItem item={item} />\n      }}\n    </ItemsList>\n  );\n}\n\nfunction ProxyListItem({ item }) {\n  return (\n    <p>\n      <span className=\"url\">{item.requestMatcher.url}</span>\n      <span>→ </span>\n      <span className=\"proxyUrl\">{item.proxy.destinationUrl}</span>\n    </p>\n  );\n}\n","import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport { Panel } from '../prototypes/stubsComponents/Panel';\nimport { EditProxy, NewProxy } from './Proxy';\n\nimport { ProxyList } from './ProxyList';\n\nexport function Proxy({ client }) {\n  const history = useHistory();\n  // TODO: last place to remove the client!\n  const fetch = async (set) => await client.fetchProxy(set);\n  const clear = async () => await client.clearProxy();\n\n  const onSelect = (item) => history.push(`/stub4/proxy/edit/${item.id}`);\n\n  return (\n    <>\n      <Route path=\"/stub4/proxy/edit/:id\">\n        <EditProxy />\n      </Route>\n      <Route path=\"/stub4/proxy/new\">\n        <NewProxy />\n      </Route>\n      <Route>\n        <Panel\n          itemsLifecycle={{ fetch, clear }}\n          presentation={{ label: 'Proxy', icon: 'redo', className: 'proxyBody' }}\n          pathBased={true}\n        >\n          {{\n            list: (items, _) => <ProxyList items={items} selected={null} setSelected={onSelect} />,\n            preview: (_) => <></>,\n            create: (_) => <></>\n          }}\n        </Panel>\n      </Route>\n    </>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport function Matched({ item, count }) {\n  const { id, requestMatcher, type } = item;\n  const history = useHistory();\n  const destination = `/stub4/${type.toLowerCase()}/edit/${id}`;\n  return (\n    <a\n      className=\"interactionLink\"\n      href={destination}\n      onClick={(e) => {\n        e.preventDefault();\n        history.push(destination);\n      }}\n    >\n      {/* TODO: different icons per type */}\n      <i className=\"material-icons md-36 green\">check</i>\n      {count > 1 && `${count}x `}\n      {requestMatcher.method} {requestMatcher.url}\n    </a>\n  );\n}\n\nexport function Unmatched({ requestDetails, count }) {\n  const { url, method, headers, body } = requestDetails;\n  const history = useHistory();\n  const destination = '/stub4/stubs/new';\n  return (\n    <a\n      className=\"interactionLink\"\n      href={destination}\n      onClick={(e) => {\n        e.preventDefault();\n        history.push(destination);\n      }}\n    >\n      <i className=\"material-icons md-36 red\">close</i>\n      {count > 1 && `${count}x `}\n      {method} {url} {JSON.stringify(headers)} {JSON.stringify(body)}\n    </a>\n  );\n}\n","import { isEmpty, isEqual } from 'lodash';\nimport React, { useState } from 'react';\nimport { Matched, Unmatched } from './InteractionItems';\n\nexport function InteractionsList({ interactions }) {\n  const [group, setGroup] = useState(false);\n  return (\n    <>\n      <div className=\"interactionsFilterBlock\">\n        <button className=\"groupInteractions\" onClick={() => setGroup(!group)}>\n          Group <i className=\"material-icons\">filter_alt</i>\n        </button>\n      </div>\n      <div className=\"interactionsList\">\n        {isEmpty(interactions) && <p className=\"noInteractions\">No Interactions yet</p>}\n        {group ? (\n          <GroupedInteractions interactions={interactions} />\n        ) : (\n          <AllInteractions interactions={interactions} />\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction AllInteractions({ interactions }) {\n  return (\n    <>\n      {interactions.map((interaction, index) => (\n        <div className=\"interaction\" key={`${index}-interaction`}>\n          {interaction.matched ? (\n            <Matched item={interaction.item} />\n          ) : (\n            <Unmatched requestDetails={interaction.requestDetails} />\n          )}\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction GroupedInteractions({ interactions }) {\n  const groupedMatched = groupMatched(\n    interactions.filter((interaction) => interaction.matched === true)\n  );\n  const groupedUnmatched = groupUnmatched(\n    interactions.filter((interaction) => interaction.matched === false)\n  );\n\n  return (\n    <>\n      {groupedMatched.map((group, index) => (\n        <div className=\"interaction\" key={`${index}-interaction`}>\n          <Matched item={group.item} count={group.count} />\n        </div>\n      ))}\n      {groupedUnmatched.map((group, index) => (\n        <div className=\"interaction\" key={`${index}-interaction`}>\n          <Unmatched requestDetails={group.requestDetails} count={group.count} />\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction groupMatched(matchedInteractions) {\n  return matchedInteractions.reduce((previous, current) => {\n    const group = previous.find((group) => group.id === current?.item?.id);\n    if (group) {\n      group.count += 1;\n    } else {\n      previous.push({\n        count: 1,\n        id: current?.item?.id,\n        item: current.item\n      });\n    }\n    return previous;\n  }, []);\n}\n\nfunction groupUnmatched(unmatchedInteractions) {\n  return unmatchedInteractions.reduce((previous, current) => {\n    const group = previous.find((group) => isEqual(group.requestDetails, current?.requestDetails));\n    if (group) {\n      group.count += 1;\n    } else {\n      previous.push({\n        count: 1,\n        requestDetails: current.requestDetails\n      });\n    }\n    return previous;\n  }, []);\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { InteractionsList } from './InteractionsList';\n\nimport { getInteractions, clearInteractions } from '@stub4/client';\n\nimport './Interactions.scss';\n\nexport function Interactions({ children }) {\n  const [socket, setSocket] = useState(null);\n  const [previousInteractions, setPreviousInteractions] = useState([]);\n\n  useEffect(() => {\n    async function fetchInteractions() {\n      const response = await getInteractions();\n      const { interactions: previousInteractions, websocketPort } = response.data;\n      setPreviousInteractions(previousInteractions);\n      const socket = new WebSocket(`ws://localhost:${websocketPort}/interactions`);\n      setSocket(socket);\n    }\n    if (socket === null) {\n      fetchInteractions();\n    }\n  }, [socket]);\n\n  async function clear() {\n    await clearInteractions();\n    setPreviousInteractions([]);\n  }\n\n  return (\n    <div className=\"panel\">\n      <h1>\n        Interactions<i className=\"material-icons\">swap_horiz</i>\n        {children}\n        <button className=\"clearInteractions\" onClick={clear}>\n          <i className=\"material-icons\">clear_all</i> Clear\n        </button>\n      </h1>\n      {socket ? (\n        <RealTimeInteractions socket={socket} previousInteractions={previousInteractions} />\n      ) : (\n        'Just a second'\n      )}\n    </div>\n  );\n}\n\nfunction RealTimeInteractions({ socket, previousInteractions }) {\n  const [interactions, setInteractions] = useState(previousInteractions);\n\n  useEffect(() => {\n    setInteractions(previousInteractions);\n  }, [previousInteractions]);\n\n  socket.onmessage = (message) => {\n    const parsedItem = JSON.parse(message.data);\n    setInteractions([...interactions, parsedItem]);\n  };\n\n  return <InteractionsList interactions={interactions} />;\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './Tabs.scss';\n\nexport default function Tabs({ children }) {\n  const location = useLocation();\n  return (\n    <div className=\"tabsContent\">\n      <nav className=\"tabrow\">\n        <Link\n          to=\"/stub4/stubs\"\n          className={location.pathname === '/stub4/stubs' ? 'selectedTab' : 'tab'}\n        >\n          Stubs <i className=\"material-icons\">import_export</i>\n        </Link>\n        <Link\n          to=\"/stub4/scenarios\"\n          className={location.pathname === '/stub4/scenarios' ? 'selectedTab' : 'tab'}\n        >\n          Scenarios <i className=\"material-icons\">filter_list</i>\n        </Link>\n        <Link\n          to=\"/stub4/cruds\"\n          className={location.pathname === '/stub4/cruds' ? 'selectedTab' : 'tab'}\n        >\n          Cruds <i className=\"material-icons\">storefront</i>\n        </Link>\n        <Link\n          to=\"/stub4/proxy\"\n          className={location.pathname === '/stub4/proxy' ? 'selectedTab' : 'tab'}\n        >\n          Proxy <i className=\"material-icons\">redo</i>\n        </Link>\n      </nav>\n      {children}\n    </div>\n  );\n}\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Stub4, { setPort as setStubClientPort } from '@stub4/client';\n\nimport { Stubs } from './stubs/Stubs';\nimport { Cruds } from './cruds/Cruds';\nimport { Scenarios } from './scenarios/Scenarios';\nimport { Proxy } from './proxy/Proxys';\nimport { Interactions } from './interactions/Interactions';\n\nimport Tabs from './navigation/Tabs';\n\nimport './Core.scss';\n\nfunction Core({ children }) {\n  const { clients, pending } = useClients();\n  const [interactions, setInteractions] = useState(true);\n\n  if (pending) {\n    return (\n      <>\n        {children}\n        <h2 className=\"loading\">Just a second</h2>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"Core\">\n      {children}\n      <div className=\"tabs\">\n        <Tabs>\n          {!interactions && (\n            <button className=\"showSidePanel\" onClick={() => setInteractions(true)}>\n              Show interactions\n            </button>\n          )}\n        </Tabs>\n      </div>\n      <div className=\"panels\">\n        <div className=\"stubs\">\n          <Switch>\n            <Route path=\"/stub4/stubs\">\n              <Stubs client={clients.stubClient} />\n            </Route>\n            <Route path=\"/stub4/scenarios\">\n              <Scenarios client={clients.scenariosClient} />\n            </Route>\n            <Route path=\"/stub4/cruds\">\n              <Cruds client={clients.crudClient} />\n            </Route>\n            <Route path=\"/stub4/proxy\">\n              <Proxy client={clients.proxyClient} />\n            </Route>\n            <Redirect to=\"/stub4/stubs\" />\n          </Switch>\n        </div>\n        {interactions && (\n          <div className=\"sidePanel\">\n            <Interactions>\n              <button className=\"hideSidePanel\" onClick={() => setInteractions(false)}>\n                Hide\n              </button>\n            </Interactions>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst useClients = () => {\n  const [port, setPort] = useState(8080);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    const fetchPort = async () => {\n      const ax = axios.create();\n      const response = await ax.get('/stubs-port');\n      setPort(response.data.port);\n      setStubClientPort(response.data.port);\n      setPending(false);\n    };\n\n    fetchPort();\n  });\n\n  // TODO: these gotta go. Should just setPort above, and then use stubFor(matcher, response)\n  // TWIST! How to list things and get existing? Need getStubs/getStub/clear type methods?\n  return {\n    pending,\n    clients: {\n      stubClient: new Stub4.StubClient(port),\n      crudClient: new Stub4.CrudClient(port),\n      scenariosClient: new Stub4.ScenariosClient(port),\n      proxyClient: new Stub4.ProxyClient(port),\n      contractClient: new Stub4.ContractsClient(port)\n    }\n  };\n};\n\nexport { Core };\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './Index.scss';\n\nexport function Index({ children }) {\n  return (\n    <>\n      <h2 className=\"indexTitle\">Index</h2>\n      <ul>{children}</ul>\n    </>\n  );\n}\n\nexport function DocsLink({ path, label }) {\n  const { pathname } = useLocation();\n  const linkClassName = (to) => (pathname.startsWith(to) ? 'selectedDocsLink' : 'docsLink');\n\n  return (\n    <li className=\"indexListItem\" key={path}>\n      <Link to={path} className={linkClassName(path)}>\n        {label}\n      </Link>\n    </li>\n  );\n}\n\nexport function DocsSubLink({ path, label }) {\n  const pathBits = path.split('/');\n  pathBits.pop();\n  const parent = pathBits.join('/');\n  const { pathname } = useLocation();\n\n  const linkClassName = pathname === path ? 'selectedSubDocsLink' : 'subDocsLink';\n\n  return (\n    pathname.startsWith(parent) && (\n      <li className=\"indexListSubItem\" key={path}>\n        <Link to={path} className={linkClassName}>\n          {label}\n        </Link>\n      </li>\n    )\n  );\n}\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport './Contents.scss';\n\nfunction Contents({ children }) {\n  return <Switch>{children}</Switch>;\n}\n\nexport { Contents };\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport function SectionTitle({ title }) {\n  return <h2 className=\"contentsTitle\">{title}</h2>;\n}\n\nexport function Code({ indentation = 2, children }) {\n  return <pre className=\"code\">{JSON.stringify(children, null, indentation)}</pre>;\n}\n\nexport function CodeSnippet({ children }) {\n  return <pre className=\"code\">{children}</pre>;\n}\n\nexport function InlineCode({ children }) {\n  return <span className=\"code\">{children}</span>;\n}\n\nexport function Link({ to, children }) {\n  return (\n    <RouterLink to={to} className={'linkToOtherDocs'}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { SectionTitle } from '../DocsBits';\n\nfunction Motivation() {\n  return (\n    <>\n      <SectionTitle title=\"Why\" />\n\n      <p>When building an app or website, tests are your best friends.</p>\n      <p>But sometimes, it's just useful to start the thing and see it working.</p>\n      <p>\n        In these cases, you can either point your app at the real system you're integrating with and\n        hope for the best, or you can use Stub4 to simulate it.\n      </p>\n      <p>\n        Stub4 allows you to explore your app's behaviour without connecting it to a real live\n        system, and because you have full control, verify what happens in situations that would be\n        hard to encounter in real life.\n      </p>\n      <p>You can use if prototyping, testing, demonstrating, and more</p>\n    </>\n  );\n}\n\nexport { Motivation };\n","import React from 'react';\nimport { SectionTitle, Link } from '../DocsBits';\n\nfunction What() {\n  return (\n    <>\n      <SectionTitle title=\"What\" />\n      <p>\n        Stub4 is a programmable stub server. You can configure it at start, via its http API, or via\n        its web interface. <br />\n        It comes with a few built-in types of stubbings\n      </p>\n      <h3>Stubs</h3>\n      <p>\n        The most straighgtforward tool Stub4 offers to simulate a real system is a{' '}\n        <span className=\"highlightedTerm\">stub</span>. A stub is a simple request-response setup.\n        Given a request matching some parameters, a pre-configured response is returned.\n      </p>\n      <p>\n        You can find how to create and use a stub <Link to=\"/stub4/docs/how/stubs\">here</Link>\n      </p>\n      <p>But that's not all.</p>\n      <h3>Scenarios</h3>\n      <p>\n        Often, you'll want to simulate a variety of scenarios for the same HTTP call, with different\n        outcomes based on the request sent. To do this, you can use{' '}\n        <span className=\"highlightedTerm\">scenarios</span>. Scenarios are similar to stubs, but\n        simplify the process of setting up different responses based on the parameters of the\n        request. You can even setup default values, and only override what you need in a given\n        outcome.\n      </p>\n      <p>\n        You can find how to create and use scenarios{' '}\n        <Link to=\"/stub4/docs/how/scenarios\">here</Link>\n      </p>\n      <h3>Cruds</h3>\n      <p>\n        Another common use case is to simulate straightforward CRUD (Create Read Update Delete)\n        applications that follow REST conventions. For that you'll want to use a{' '}\n        <span className=\"highlightedTerm\">crud</span>, which creates a small in-memory database that\n        you can add and remove things from via HTTP calls.\n      </p>\n      <p>\n        You can find how to create and use cruds <Link to=\"/stub4/docs/how/cruds\">here</Link>\n      </p>\n      <h3>Proxy</h3>\n      <p>\n        In some cases, you might just want to let the traffic reach your downstream systems instead\n        of stubbing it. For that, you can use a <span className=\"highlightedTerm\">proxy</span>. As\n        the name suggests, all requests hitting a proxy will be forwarded over to a configured\n        target, and responses then relied back to your app.\n        <br />\n        This can be useful if you want to simulate your system only in some situations or for\n        specific cases.\n      </p>\n      <p>\n        You can find how to create and use a proxy <Link to=\"/stub4/docs/how/proxy\">here</Link>\n      </p>\n    </>\n  );\n}\n\nexport { What };\n","import React from 'react';\nimport { Code, InlineCode as IC, Link, SectionTitle } from '../../DocsBits';\n\nexport function RequestMatcher() {\n  return (\n    <>\n      <SectionTitle title=\"The Request Matcher\" />\n      <h4>URL</h4>\n      <p>\n        The request matcher in a stub must contain at minimum a <IC>url</IC>. If the request\n        received matches the url exactly, the response is sent back. <br />\n        You can also use <IC>*</IC> to match only the start, or end, of a URL. For example{' '}\n        <IC>/the start/*</IC> or <IC>*/the-end</IC>\n      </p>\n      <h4>Method</h4>\n      <p>\n        The method matcher and the body matcher are both optional and are going to be compared on\n        top of the url matching. If you want to explicitly match any method, you can use{' '}\n        <IC>method: '*'</IC>. This is equivalent to omitting the method matcher. <br />\n        As the name suggests, the method matcher ensures the method on the request matches the given\n        value. By default any method is accepted and will return a successful response.\n      </p>\n      <h4>Body</h4>\n      <p>\n        The body matcher will match the contents of the request received. A body matcher can be used\n        for json, as well as xml content. <br />\n        For json, <IC>body</IC> will contain a <IC>bodyMatch</IC>, that will compare key-value\n        pairs. <br />\n        For xml, you'll need to add <IC>type: 'xml'</IC>, and a list of <IC>path</IC> and{' '}\n        <IC>value</IC> pairs. The paths are{' '}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/XPath\" className=\"linkToOtherDocs\">\n          xPath\n        </a>{' '}\n        expressions that will be executed agains the request body received. Their output is then\n        compared to the value provided.\n        <br />\n        Here's an example:{' '}\n      </p>\n      <Code>\n        {{\n          requestMatcher: {\n            method: 'POST',\n            url: '/body-match-xml',\n            body: {\n              type: 'xml',\n              bodyMatch: [{ path: 'string(//author)', value: 'somebody' }]\n            }\n          }\n        }}\n      </Code>\n    </>\n  );\n}\n\nexport function RequestMatcherMoreInfoLink() {\n  return (\n    <>\n      <p>\n        For more information on the request matcher,{' '}\n        <Link to=\"/stub4/docs/how/requestMatcher\">check its documentation page</Link>\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport { RequestMatcherMoreInfoLink } from './RequestMatcher';\nimport { Code, InlineCode, SectionTitle } from '../../DocsBits';\n\nexport function Stubs() {\n  const stub = {\n    requestMatcher: { url: '/some-url' },\n    response: { body: { mgs: 'User 321 created' }, type: 'json' }\n  };\n\n  return (\n    <>\n      <SectionTitle title=\"Stubs\" />\n      <p>\n        If you want to simulate an HTTP request-response setup, a stub is a great start. You define{' '}\n        how to match a request, and setup a canned response that will be returned.\n      </p>\n      <p>A complete stub definition will look a bit like this:</p>\n      <Code>{stub}</Code>\n\n      <RequestMatcherMoreInfoLink />\n\n      <StubResponseDefinition />\n    </>\n  );\n}\n\nfunction StubResponseDefinition() {\n  return (\n    <>\n      <h3>Response definition</h3>\n      <p>\n        A stub response definition can contain:\n        <ul>\n          <li>\n            <InlineCode>statusCode</InlineCode> - defaults to <InlineCode>200</InlineCode>\n          </li>\n          <li>\n            <InlineCode>type</InlineCode> - defaults to <InlineCode>application/json</InlineCode>\n          </li>\n          <li>\n            <InlineCode>body</InlineCode> - defaults to <InlineCode>{'{}'}</InlineCode>\n          </li>\n          <li>\n            <InlineCode>delay</InlineCode> - defaults to <InlineCode>0</InlineCode>. Defined in\n            milliseconds\n          </li>\n        </ul>\n        Here's an example:\n      </p>\n      <Code>\n        {{\n          statusCode: 201,\n          type: 'application/json',\n          body: { message: 'Item created successfully', itemId: '321' },\n          delay: 1000\n        }}\n      </Code>\n      <p>\n        At the moment all properties are optional and will be defaulted as described above, but the{' '}\n        <InlineCode>response</InlineCode> section needs to be added (this might well change in the\n        future)\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport { Code, InlineCode, SectionTitle } from '../../DocsBits';\n\nfunction Cruds() {\n  const crud = {\n    requestMatcher: { url: '/some-url' },\n    crud: { idAlias: 'personId', patchOnPost: true, data: [{ personId: 321, name: 'jimbo' }] }\n  };\n\n  return (\n    <>\n      <SectionTitle title=\"Cruds\" />\n      <p>\n        If you want to simulate a REST-like resource repository, and be able to Create, Read,\n        Update, Delete, what you want is a CRUD. You just need to define the URL you want, some\n        initial data if you need some.\n      </p>\n      <p>A complete crud definition will look a bit like this:</p>\n      <Code>{crud}</Code>\n\n      <RequestMatching />\n\n      <ResponseDefinition />\n    </>\n  );\n}\n\nfunction RequestMatching() {\n  return (\n    <>\n      <h3>Request Matching</h3>\n      <p>\n        The only part you need in a crud request matcher is the <InlineCode>url</InlineCode>. Stub4\n        will create an in-memory collection from which you can get items by ID, delete, update and\n        so forth. <br />\n        For example, a crud created with id <InlineCode>/some-url</InlineCode> and containing an\n        object with id <InlineCode>321</InlineCode> will return the item when called with{' '}\n        <InlineCode>/some-url/321</InlineCode>. You can delete it with a DELETE call, update it with\n        PATCH, and so on.\n      </p>\n    </>\n  );\n}\n\nfunction ResponseDefinition() {\n  return (\n    <>\n      <h3>Crud options</h3>\n      <p>\n        On top of allowing you to create a crud with some pre-define data, you can also change the\n        primary key of the items you create and retrieve. By default the key name is{' '}\n        <InlineCode>id</InlineCode>, but you can change it setting <InlineCode>idAlias</InlineCode>\n        <br />\n        For example, take the following crud definition:\n      </p>\n      <Code>\n        {{\n          requestMatcher: { url: '/customers' },\n          crud: {\n            data: [{ id: 321, username: 'jbo', name: 'jimbo' }]\n          }\n        }}\n      </Code>\n      <p>\n        Because we have not defined a custom <InlineCode>idAlias</InlineCode>, you'll get Jimbo's\n        record from the crud with a call to <InlineCode>/customers/321</InlineCode>.<br />\n        If you instead wanted to retrieve records using <InlineCode>username</InlineCode> as the\n        key, you would change the crud definition like so:\n      </p>\n      <Code>\n        {{\n          requestMatcher: { url: '/customers' },\n          crud: {\n            idAlias: 'username',\n            data: [{ id: 321, username: 'jbo', name: 'jimbo' }]\n          }\n        }}\n      </Code>\n      <p>\n        Now your call to <InlineCode>/customers/321</InlineCode> will return a 404. To get Jimbo's\n        record you'll need to use <InlineCode>/customers/jbo</InlineCode>.\n      </p>\n      <p>\n        Finally, <InlineCode>patchOnPost</InlineCode> makes it such that when you post a record with\n        an id that already existed, instead of entirely overwriting the record, it will update the\n        properties you have sent.\n      </p>\n    </>\n  );\n}\n\nexport { Cruds };\n","import React from 'react';\nimport { Code, InlineCode, SectionTitle, CodeSnippet } from '../../DocsBits';\n\nfunction Scenarios() {\n  const scenarios = {\n    requestMatcher: { url: '/greet/person/{name}' },\n    outcomes: [\n      { match: { name: 'jimmy' }, response: { body: { greeting: 'Hello from Jimmy' } } },\n      { match: { name: 'janny' }, response: { body: { greeting: 'Hello from Janny' } } },\n      {\n        match: { name: 'mistery' },\n        response: { body: { greeting: 'mistery guest not found' }, statusCode: 404 }\n      }\n    ],\n    default: {\n      response: {\n        body: { greeting: \"You're going to need to provide a name\", source: 'greetings' },\n        statusCode: 200\n      }\n    }\n  };\n\n  return (\n    <>\n      <SectionTitle title=\"Scenarios\" />\n      <p>\n        Stubs are useful and convenient for mocking a single request-response setup, but often\n        you'll find yourself needing to setup slight variations of the same response, based on\n        slightly different request parameters. That's where scenarios become very useful. <br />\n        Setting up scenarios is made up of three parts: define how to match requests, define a\n        default response if you need one, and then define as many outcomes as needed, based on the\n        parameters of requests. <br />\n        Here's an example of a full scenario:\n      </p>\n      <Code>{scenarios}</Code>\n\n      <RequestMatching />\n\n      <ResponseDefinition />\n    </>\n  );\n}\n\nfunction RequestMatching() {\n  return (\n    <>\n      <h3>Request Matching</h3>\n      <p>\n        The key part of a scenario request matcher is the <InlineCode>url</InlineCode>. This can be\n        an exact match of your requests' url if you want to match on the request body, or you can\n        include variable names in <InlineCode>{'{}'}</InlineCode> and reference them in outcomes to\n        match the correct one.\n        <br />\n        For example, given this url <InlineCode>{'/some-url/{variableName}'}</InlineCode>, and these\n        outcomes\n      </p>\n      <CodeSnippet indentation={1}>\n        [<br />\n        {\"  { match: { variableName: 'option1' }, response: { statusCode: 200 } }\"}\n        <br />\n        {\"  { match: { variableName: 'option2' }, response: { statusCode: 201 } }\"}\n        <br />]\n      </CodeSnippet>\n      <p>\n        requests to <InlineCode>{'/some-url/option1'}</InlineCode> will get back a{' '}\n        <InlineCode>200</InlineCode>, where calls to <InlineCode>{'/some-url/option2'}</InlineCode>{' '}\n        will get back a <InlineCode>201</InlineCode>.\n      </p>\n      <p>\n        You can also match on requests body; given this url <InlineCode>{'/some-url'}</InlineCode>,\n        and the previous outcomes, requests with body which include{' '}\n        <InlineCode>{'{\"varibleName\": \"option1\"}'}</InlineCode> will get a{' '}\n        <InlineCode>200</InlineCode>, requests with body{' '}\n        <InlineCode>{'{\"varibleName\": \"option2\"}'}</InlineCode> will get{' '}\n        <InlineCode>201</InlineCode>.\n      </p>\n    </>\n  );\n}\n\nfunction ResponseDefinition() {\n  return (\n    <>\n      <h3>Outcomes and default</h3>\n      <p>\n        Each outcome in a scenario should contain a <InlineCode>match</InlineCode> block, which is\n        used to determine whether the corresponding response should be sent back. This object should\n        be a simple json object, and stub4 will match each key/value pair against either values from\n        the url matcher, or the body received. <br />\n        The response object can contain a <InlineCode>statusCode</InlineCode>, and{' '}\n        <InlineCode>body</InlineCode>. <br />\n        If many of your outcomes have a common <InlineCode>statusCode</InlineCode> or{' '}\n        <InlineCode>body</InlineCode>, you can set this values in the{' '}\n        <InlineCode>default.response</InlineCode>, and only override what you need where\n        appropriate.\n      </p>\n    </>\n  );\n}\n\nexport { Scenarios };\n","import React from 'react';\nimport { Code, InlineCode, SectionTitle } from '../../DocsBits';\n\nfunction Proxy() {\n  const proxy = {\n    requestMatcher: { url: '/some-url' },\n    proxy: { destination: { url: '/some-other-url' } }\n  };\n\n  return (\n    <>\n      <SectionTitle title=\"Proxy\" />\n      <p>\n        There are cases where you might want to swap from simulating a service, to just letting your\n        app call it. You can either change the configuration of your app, and point it where you\n        need, and restart it, or you can let your app call Stub4, and have it proxy the request over\n        to any destination. <br />\n        With this, you can easily swap out calling the real thing for a stub at any time you need,\n        without your app ever knowing the difference. <br />\n        (In the future, Stub4 will offer more elaborate controls over its proxy, to allow you to\n        only proxy calls that match specific parameters, to transform requests before sending them\n        back to your app, or introducing faults such as delaying responses for some time.) <br />\n        Here's an example of a proxy:\n      </p>\n      <Code>{proxy}</Code>\n\n      <RequestMatching />\n\n      <ResponseDefinition />\n    </>\n  );\n}\n\nfunction RequestMatching() {\n  return (\n    <>\n      <h3>Request Matching</h3>\n      <p>\n        The request matcher in a proxy must contain at minimum a <InlineCode>url</InlineCode>. If\n        the request received matches the url exactly, the response is sent back.\n      </p>\n      <p>\n        You can add an optional <InlineCode>method</InlineCode> matcher, which will default to{' '}\n        <InlineCode>GET</InlineCode>. Body matching will be supported soon.\n      </p>\n    </>\n  );\n}\n\nfunction ResponseDefinition() {\n  return (\n    <>\n      <h3>The destination</h3>\n      <p>\n        A proxy currently only allows defining a <InlineCode>destination</InlineCode> and its{' '}\n        <InlineCode>url</InlineCode>. When a request is matched, it will be proxied over to the\n        destination given, and the response sent back.\n      </p>\n    </>\n  );\n}\n\nexport { Proxy };\n","import React from 'react';\nimport { SectionTitle } from '../../DocsBits';\n\nfunction Config() {\n  return (\n    <>\n      <SectionTitle title=\"Config\" />\n      <p>Info coming soon</p>\n    </>\n  );\n}\n\nexport { Config };\n","import React from 'react';\nimport { InlineCode, SectionTitle, Link } from '../DocsBits';\nimport { Stubs } from './How/Stubs';\nimport { Cruds } from './How/Cruds';\nimport { Scenarios } from './How/Scenarios';\nimport { Proxy } from './How/Proxy';\nimport { Config } from './How/Config';\nimport { RequestMatcher } from './How/RequestMatcher';\n\nfunction How() {\n  return (\n    <>\n      <SectionTitle title=\"How to use Stub4\" />\n      <p>\n        There's three ways to setup fakes in Stub4: the web interface, configuration files, and the\n        test client.\n      </p>\n      <h3>The Web Interface</h3>\n      <p>\n        By default, when you start Stub4, it opens up two ports on the network: one for managing and\n        using fakes, and one that will serve you a web interface, that you can use to see its\n        current state and add new fakes.\n        {/* Picture */}\n        On this page you'll be able to see the current fakes you have created, as well as create new\n        ones. You'll also see any request that didn't match any fake, and create a new stub from\n        that. <br />\n        In the near distant future, you'll be able to create a new fake manually, and export it as\n        JSON, ready to be dropped in a config file or created via the test client.\n      </p>\n      <h3>Programmatically, and with Config Files</h3>\n      <p>\n        You can start Stub4 and configure it directly in a javascript file. Alternatively, you start\n        Stub4 via the CLI, and can point it at a JSON config file. Wit either options, you change\n        its settings, and create any number of stubbings at startup. You'll still be able to add or\n        remove any once it's up, but if you know you always need some setup, you can save it in\n        files and keep it in your repo along with your app. <br />\n        You can find more info about how you can configure Stub4{' '}\n        <Link to=\"/stub4/docs/how/config\">here</Link>.\n      </p>\n      <h3>The Test Client</h3>\n      <p>\n        Finally, you can start and configure Stub4 right in your tests. The Stub4 core library\n        exports functions to start and stop it right from your test. Along with that, another\n        library called <InlineCode>@stub4/client</InlineCode> allows you to setup your fakes with a\n        DLS-like set of functions, that will help you explore what's available and give you type\n        hints and autocomplete.\n      </p>\n    </>\n  );\n}\n\nexport { How, Stubs, Cruds, Scenarios, Proxy, Config, RequestMatcher };\n","import React from 'react';\nimport { SectionTitle } from '../DocsBits';\n\nfunction Next() {\n  return (\n    <>\n      <SectionTitle title=\"Upcoming features\" />\n\n      <p>\n        I'm still working on making this awesome. Here's some of the things I'm going to be adding\n        next:\n      </p>\n      <ul>\n        <li>\n          Codegen - A button on the UI that allows you to export a manually created stub to config\n        </li>\n        <li>\n          Wizards - An even easier way to create stubs and more by pointing Stub4 at Swagger/OpenApi\n          documentation\n        </li>\n        <li>\n          Contracts - Actually already partially working but undocumented, the possibility to\n          generate pact contracts from stubs definitions, to ensure they are realistic\n        </li>\n      </ul>\n    </>\n  );\n}\nexport { Next };\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { Index, DocsLink, DocsSubLink } from './Index';\nimport { Contents } from './Contents';\n\nimport { Motivation } from './contents/Motivation';\nimport { What } from './contents/What';\nimport { How, Stubs, Cruds, Scenarios, Proxy, Config, RequestMatcher } from './contents/How';\nimport { Next } from './contents/Next';\n\nimport './Documentation.scss';\n\nfunction Documentation({ children }) {\n  return (\n    <div className=\"Docs\">\n      {children}\n      <div className=\"docsContent\">\n        <div className=\"column\">\n          <Index>\n            <DocsLink label=\"Motivation\" path={'/stub4/docs/why'} />\n            <DocsLink label=\"What is it\" path={'/stub4/docs/what'} />\n            <DocsLink label=\"How to use it\" path={'/stub4/docs/how'} />\n            <DocsSubLink label=\"How to create a stub\" path={'/stub4/docs/how/stubs'} />\n            <DocsSubLink label=\"How to create a crud\" path={'/stub4/docs/how/cruds'} />\n            <DocsSubLink label=\"How to create scenarios\" path={'/stub4/docs/how/scenarios'} />\n            <DocsSubLink label=\"How to create a proxy\" path={'/stub4/docs/how/proxy'} />\n            <DocsSubLink label=\"Matching requests\" path={'/stub4/docs/how/requestMatcher'} />\n            <DocsSubLink label=\"How to configure Stub4\" path={'/stub4/docs/how/config'} />\n\n            <DocsLink label=\"Next\" path={'/stub4/docs/next'} />\n          </Index>\n        </div>\n        <div className=\"centerColumn\">\n          <Contents>\n            <Route path={'/stub4/docs/why'} component={Motivation} />\n            <Route path={'/stub4/docs/what'} component={What} />\n\n            <Route path={'/stub4/docs/how/config'} component={Config} />\n            <Route path={'/stub4/docs/how/requestMatcher'} component={RequestMatcher} />\n            <Route path={'/stub4/docs/how/stubs'} component={Stubs} />\n            <Route path={'/stub4/docs/how/cruds'} component={Cruds} />\n            <Route path={'/stub4/docs/how/scenarios'} component={Scenarios} />\n            <Route path={'/stub4/docs/how/proxy'} component={Proxy} />\n            <Route path={'/stub4/docs/how'} component={How} />\n\n            <Route path={'/stub4/docs/next'} component={Next} />\n            <Redirect to={'/stub4/docs/why'} />\n          </Contents>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Documentation };\n","import React from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './Header';\nimport { Core } from './Core/Core';\nimport { Documentation } from './Docs/Documentation';\n\nimport './App.scss';\nimport './Icons.scss';\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/stub4/docs\">\n          <Documentation>\n            <Header>\n              <h1>Welcome to the Docs!</h1>\n              <Link to=\"/stub4\" className=\"backToStub4Button\">\n                Back to Stub4\n              </Link>\n            </Header>\n          </Documentation>\n        </Route>\n        <Route path=\"/stub4\">\n          <Core>\n            <Header>\n              <h1>Welcome to Stub4!</h1>\n              <Link to=\"/stub4/docs\" className=\"helpButton\">\n                To the Docs\n              </Link>\n            </Header>\n          </Core>\n        </Route>\n        <Redirect to=\"/stub4\" />\n      </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}